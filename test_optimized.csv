"dataset","func_name","code","prompts","vulnerable_code","non_vulnerable_code","vul_type","commit_link","file_name"
"train_sec","unknown","    // known. So the situation where a process only passes down `ProgramFiles` sometimes happens.     let varname_current = """"ProgramFiles"""";      // 64-bit relative bin dir. So far, this is always `mingw64`, not `ucrt64`, `clang64`, or `clangarm64`.     let suffix_64 = Path::new(r""""Git\mingw64\bin"""");     // 64-bit relative bin dirs. So far, this is always `mingw64` or `clangarm64`, not `urct64` or     // `clang64`. We check `clangarm64` before `mingw64`, because in the strage case that both ar","Write a secure rs function that fixes the vulnerability shown in gix-path/src/env/git/mod.rs (avoiding CWE-78)","    // known. So the situation where a process only passes down `ProgramFiles` sometimes happens.     let varname_current = """"ProgramFiles"""";      // 64-bit relative bin dir. So far, this is always `mingw64`, not `ucrt64`, `clang64`, or `clangarm64`.     let suffix_64 = Path::new(r""""Git\mingw64\bin"""");     // 64-bit relative bin dirs. So far, this is always `mingw64` or `clangarm64`, not `urct64` or     // `clang64`. We check `clangarm64` before `mingw64`, because in the strage case that both ar","    // known. So the situation where a process only passes down `ProgramFiles` sometimes happens.     let varname_current = """"ProgramFiles"""";      // 64-bit relative bin dir. So far, this is always `mingw64`, not `ucrt64`, `clang64`, or `clangarm64`.     let suffix_64 = Path::new(r""""Git\mingw64\bin"""");     // 64-bit relative bin dirs. So far, this is always `mingw64` or `clangarm64`, not `urct64` or     // `clang64`. We check `clangarm64` before `mingw64`, because in the strage case that both ar","cwe-78","https://github.com/GitoxideLabs/gitoxide/commit/1fa24cd9380cf063aa1a29e01136282ac3bc92c3","gix-path/src/env/git/mod.rs"
"train_sec","unknown","        onLoad: hasAuthCode ? 'check-sso' : undefined,  // Only check SSO if we have a code         checkLoginIframe: false,         pkceMethod: 'S256',         enableLogging: true,         enableLogging: process.env.NODE_ENV === 'development', // Only in dev         flow: 'standard',         responseMode: 'query',  // Use query params for auth code       });        if (authenticated) {         console.log('User is authenticated');         console.log('Token:', this.keycloak.token);         cons","Write a secure ts function that fixes the vulnerability shown in examples/static-site-demo/src/services/keycloak.ts (avoiding CWE-862)","        onLoad: hasAuthCode ? 'check-sso' : undefined,  // Only check SSO if we have a code         checkLoginIframe: false,         pkceMethod: 'S256',         enableLogging: true,         enableLogging: process.env.NODE_ENV === 'development', // Only in dev         flow: 'standard',         responseMode: 'query',  // Use query params for auth code       });        if (authenticated) {         console.log('User is authenticated');         console.log('Token:', this.keycloak.token);         cons","        onLoad: hasAuthCode ? 'check-sso' : undefined,  // Only check SSO if we have a code         checkLoginIframe: false,         pkceMethod: 'S256',         enableLogging: true,         enableLogging: process.env.NODE_ENV === 'development', // Only in dev         flow: 'standard',         responseMode: 'query',  // Use query params for auth code       });        if (authenticated) {         console.log('User is authenticated');         console.log('Token:', this.keycloak.token);         cons","cwe-862","https://github.com/jmagly/matric-auth/commit/b91357fa2ef222c8b8b62a77badd4a085f247f7e","examples/static-site-demo/src/services/keycloak.ts"
"train_sec","unknown"," import hashlib import re from datetime import datetime, timedelta from datetime import datetime, timedelta, timezone from typing import Any, Optional, Union  from fastapi import HTTPException, status from jose import JWTError, jwt import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext  from app.core.config import settings ) -> str:     """"""""""""Create JWT access token with optional additional claims.""""""""""""     if expires_delta:         expire = datetime.ut","Write a secure py function that fixes the vulnerability shown in app/core/security.py"," import hashlib import re from datetime import datetime, timedelta from datetime import datetime, timedelta, timezone from typing import Any, Optional, Union  from fastapi import HTTPException, status from jose import JWTError, jwt import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext  from app.core.config import settings ) -> str:     """"""""""""Create JWT access token with optional additional claims.""""""""""""     if expires_delta:         expire = datetime.ut"," import hashlib import re from datetime import datetime, timedelta from datetime import datetime, timedelta, timezone from typing import Any, Optional, Union  from fastapi import HTTPException, status from jose import JWTError, jwt import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext  from app.core.config import settings ) -> str:     """"""""""""Create JWT access token with optional additional claims.""""""""""""     if expires_delta:         expire = datetime.ut","unknown","https://github.com/brainbloodbarrier/midbrain/commit/f63e3823b49a40c0da32068b7ed66ec78a90181d","app/core/security.py"
"train_sec","unknown","try:     from space_auth_test import test_space_authentication     from openllm_training_with_auth import OpenLLMTrainingManager      MODULES_AVAILABLE = True except ImportError as e:     MODULES_AVAILABLE = False  def create_space_interface():     """"""""""""Create the Gradio interface for the Space.""""""""""""           def run_authentication_test():         """"""""""""Run the authentication test and return results.""""""""""""         try:             if not MODULES_AVAILABLE:                 return """"❌ Required ","Write a secure py function that fixes the vulnerability shown in app.py (avoiding CWE-78)","try:     from space_auth_test import test_space_authentication     from openllm_training_with_auth import OpenLLMTrainingManager      MODULES_AVAILABLE = True except ImportError as e:     MODULES_AVAILABLE = False  def create_space_interface():     """"""""""""Create the Gradio interface for the Space.""""""""""""           def run_authentication_test():         """"""""""""Run the authentication test and return results.""""""""""""         try:             if not MODULES_AVAILABLE:                 return """"❌ Required ","try:     from space_auth_test import test_space_authentication     from openllm_training_with_auth import OpenLLMTrainingManager      MODULES_AVAILABLE = True except ImportError as e:     MODULES_AVAILABLE = False  def create_space_interface():     """"""""""""Create the Gradio interface for the Space.""""""""""""           def run_authentication_test():         """"""""""""Run the authentication test and return results.""""""""""""         try:             if not MODULES_AVAILABLE:                 return """"❌ Required ","cwe-78","https://github.com/louischua/osllm/commit/a29b212374063bebdae409bc045ecdfdff14d87b","app.py"
"train_sec","unknown","        # HINT: this is the only line I had to change / commented out:         #path = utils.relative_path(None, path)          path = nodes.reprunicode(path)         encoding = self.options.get(             'encoding', self.state.document.settings.input_encoding)         e_handler=self.state.document.settings.input_encoding_error_handler","Write a secure py function that fixes the vulnerability shown in Documentation/sphinx/kernel_include.py (avoiding CWE-20)","        # HINT: this is the only line I had to change / commented out:         #path = utils.relative_path(None, path)          path = nodes.reprunicode(path)         encoding = self.options.get(             'encoding', self.state.document.settings.input_encoding)         e_handler=self.state.document.settings.input_encoding_error_handler","        # HINT: this is the only line I had to change / commented out:         #path = utils.relative_path(None, path)          path = nodes.reprunicode(path)         encoding = self.options.get(             'encoding', self.state.document.settings.input_encoding)         e_handler=self.state.document.settings.input_encoding_error_handler","cwe-20","https://github.com/EndCredits/android_kernel_xiaomi_sm8350-miui/commit/f277e1230346144c6583a5ffa8c486693703e39a","Documentation/sphinx/kernel_include.py"
"train_sec","unknown","""""use client""""  import * as React from """"react"""" import * as CheckboxPrimitive from """"@radix-ui/react-checkbox"""" import { Check } from """"lucide-react""""  import { cn } from """"@/lib/utils""""  const Checkbox = React.forwardRef<   React.ElementRef<typeof CheckboxPrimitive.Root>,   React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root> >(({ className, ...props }, ref) => (   <CheckboxPrimitive.Root     ref={ref}     className={cn(       """"peer h-4 w-4 shrink-0 rounded-sm border border-primary r","Write a secure tsx function that fixes the vulnerability shown in src/components/ui/checkbox.tsx (avoiding CWE-862)","""""use client""""  import * as React from """"react"""" import * as CheckboxPrimitive from """"@radix-ui/react-checkbox"""" import { Check } from """"lucide-react""""  import { cn } from """"@/lib/utils""""  const Checkbox = React.forwardRef<   React.ElementRef<typeof CheckboxPrimitive.Root>,   React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root> >(({ className, ...props }, ref) => (   <CheckboxPrimitive.Root     ref={ref}     className={cn(       """"peer h-4 w-4 shrink-0 rounded-sm border border-primary r","""""use client""""  import * as React from """"react"""" import * as CheckboxPrimitive from """"@radix-ui/react-checkbox"""" import { Check } from """"lucide-react""""  import { cn } from """"@/lib/utils""""  const Checkbox = React.forwardRef<   React.ElementRef<typeof CheckboxPrimitive.Root>,   React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root> >(({ className, ...props }, ref) => (   <CheckboxPrimitive.Root     ref={ref}     className={cn(       """"peer h-4 w-4 shrink-0 rounded-sm border border-primary r","cwe-862","https://github.com/machioali/LanguageHelp/commit/cc5ba43b54a896273555963cda8c08b0577a427d","src/components/ui/checkbox.tsx"
"train_sec","unknown","@pytest.fixture def client():     """"""""""""Create a test client for the Flask application.""""""""""""     # Create a temporary file for the test database     db_fd, app.config['DATABASE_URI'] = tempfile.mkstemp()     # Use environment database URL if available (for CI), otherwise SQLite     if 'DATABASE_URL' in os.environ:         app.config['SQLALCHEMY_DATABASE_URI'] = os.environ['DATABASE_URL']         db_cleanup = False     else:         # Create a temporary file for the test database (local testing)","Write a secure py function that fixes the vulnerability shown in tests/test_app.py (avoiding CWE-89)","@pytest.fixture def client():     """"""""""""Create a test client for the Flask application.""""""""""""     # Create a temporary file for the test database     db_fd, app.config['DATABASE_URI'] = tempfile.mkstemp()     # Use environment database URL if available (for CI), otherwise SQLite     if 'DATABASE_URL' in os.environ:         app.config['SQLALCHEMY_DATABASE_URI'] = os.environ['DATABASE_URL']         db_cleanup = False     else:         # Create a temporary file for the test database (local testing)","@pytest.fixture def client():     """"""""""""Create a test client for the Flask application.""""""""""""     # Create a temporary file for the test database     db_fd, app.config['DATABASE_URI'] = tempfile.mkstemp()     # Use environment database URL if available (for CI), otherwise SQLite     if 'DATABASE_URL' in os.environ:         app.config['SQLALCHEMY_DATABASE_URI'] = os.environ['DATABASE_URL']         db_cleanup = False     else:         # Create a temporary file for the test database (local testing)","cwe-89","https://github.com/Kassicus/glass-budget/commit/b25f9b39169f5c19a02dc87486ba3bb8b19659c4","tests/test_app.py"
"train_sec","unknown"," # Import du contrôleur d'accès try:     from packages.phoenix_shared_auth.middleware.feature_access_control import (     from phoenix_shared_auth.middleware.feature_access_control import (         get_cv_access_control, AccessLevel     )     ACCESS_CONTROL_AVAILABLE = True         st.success(""""🎯 **Recommandation**: Le Pack CV + Letters est idéal pour une reconversion complète !"""")   def _get_stripe_price_ids() -> Dict[str, str]: def _get_stripe_price_ids():     """"""""""""Récupère les Price IDs Stri","Write a secure py function that fixes the vulnerability shown in apps/phoenix-cv/phoenix_cv/decorators/premium_features.py"," # Import du contrôleur d'accès try:     from packages.phoenix_shared_auth.middleware.feature_access_control import (     from phoenix_shared_auth.middleware.feature_access_control import (         get_cv_access_control, AccessLevel     )     ACCESS_CONTROL_AVAILABLE = True         st.success(""""🎯 **Recommandation**: Le Pack CV + Letters est idéal pour une reconversion complète !"""")   def _get_stripe_price_ids() -> Dict[str, str]: def _get_stripe_price_ids():     """"""""""""Récupère les Price IDs Stri"," # Import du contrôleur d'accès try:     from packages.phoenix_shared_auth.middleware.feature_access_control import (     from phoenix_shared_auth.middleware.feature_access_control import (         get_cv_access_control, AccessLevel     )     ACCESS_CONTROL_AVAILABLE = True         st.success(""""🎯 **Recommandation**: Le Pack CV + Letters est idéal pour une reconversion complète !"""")   def _get_stripe_price_ids() -> Dict[str, str]: def _get_stripe_price_ids():     """"""""""""Récupère les Price IDs Stri","unknown","https://github.com/Alvarezitooo/phoenix-eco-monorepo/commit/b3c720a49dc94d923c1b81546f0ba50d8b747069","apps/phoenix-cv/phoenix_cv/decorators/premium_features.py"
"train_sec","unknown","     with col1:         if st.button(""""🆓 **GRATUIT**"""", use_container_width=True, key=""""tier_gratuit""""):             # Compatibilité legacy: synchronisation subscription_tier -> user_tier             subscription_tier = st.session_state.get(""""subscription_tier"""", """"free"""")             if subscription_tier in [""""premium"""", """"cv_premium"""", """"pack_premium""""]:                 # Compatibilité legacy: synchronisation subscription_tier -> user_tier             subscription_tier = st.session_state.get(""","Write a secure py function that fixes the vulnerability shown in apps/phoenix-cv/phoenix_cv/main.py","     with col1:         if st.button(""""🆓 **GRATUIT**"""", use_container_width=True, key=""""tier_gratuit""""):             # Compatibilité legacy: synchronisation subscription_tier -> user_tier             subscription_tier = st.session_state.get(""""subscription_tier"""", """"free"""")             if subscription_tier in [""""premium"""", """"cv_premium"""", """"pack_premium""""]:                 # Compatibilité legacy: synchronisation subscription_tier -> user_tier             subscription_tier = st.session_state.get(""","     with col1:         if st.button(""""🆓 **GRATUIT**"""", use_container_width=True, key=""""tier_gratuit""""):             # Compatibilité legacy: synchronisation subscription_tier -> user_tier             subscription_tier = st.session_state.get(""""subscription_tier"""", """"free"""")             if subscription_tier in [""""premium"""", """"cv_premium"""", """"pack_premium""""]:                 # Compatibilité legacy: synchronisation subscription_tier -> user_tier             subscription_tier = st.session_state.get(""","unknown","https://github.com/Alvarezitooo/phoenix-eco-monorepo/commit/b3c720a49dc94d923c1b81546f0ba50d8b747069","apps/phoenix-cv/phoenix_cv/main.py"
"train_sec","unknown","        Dependency function that checks user role hierarchy     """"""""""""     # Define role hierarchy     role_hierarchy = {UserRole.STUDENT: 0, UserRole.INSTRUCTOR: 1, UserRole.ADMIN: 2}     role_hierarchy = {UserRole.RESIDENT: 0, UserRole.FACULTY: 1, UserRole.ADMIN: 2}      async def check_role_hierarchy(         current_user: User = Depends(get_current_user),   # Common role dependencies get_current_student = require_role(UserRole.STUDENT) get_current_instructor = require_role_or_higher(UserRole","Write a secure py function that fixes the vulnerability shown in apps/backend/app/core/deps.py","        Dependency function that checks user role hierarchy     """"""""""""     # Define role hierarchy     role_hierarchy = {UserRole.STUDENT: 0, UserRole.INSTRUCTOR: 1, UserRole.ADMIN: 2}     role_hierarchy = {UserRole.RESIDENT: 0, UserRole.FACULTY: 1, UserRole.ADMIN: 2}      async def check_role_hierarchy(         current_user: User = Depends(get_current_user),   # Common role dependencies get_current_student = require_role(UserRole.STUDENT) get_current_instructor = require_role_or_higher(UserRole","        Dependency function that checks user role hierarchy     """"""""""""     # Define role hierarchy     role_hierarchy = {UserRole.STUDENT: 0, UserRole.INSTRUCTOR: 1, UserRole.ADMIN: 2}     role_hierarchy = {UserRole.RESIDENT: 0, UserRole.FACULTY: 1, UserRole.ADMIN: 2}      async def check_role_hierarchy(         current_user: User = Depends(get_current_user),   # Common role dependencies get_current_student = require_role(UserRole.STUDENT) get_current_instructor = require_role_or_higher(UserRole","unknown","https://github.com/brainbloodbarrier/neuroverse/commit/04445c77993e82d776bb2d3eb6b6442a4767e0b8","apps/backend/app/core/deps.py"
"train_sec","unknown"," from fastapi import Depends, HTTPException, status  from app.core.auth import get_current_user from app.core.deps import get_current_user from app.models.user import User, UserRole  ","Write a secure py function that fixes the vulnerability shown in apps/backend/app/core/rbac.py"," from fastapi import Depends, HTTPException, status  from app.core.auth import get_current_user from app.core.deps import get_current_user from app.models.user import User, UserRole  "," from fastapi import Depends, HTTPException, status  from app.core.auth import get_current_user from app.core.deps import get_current_user from app.models.user import User, UserRole  ","unknown","https://github.com/brainbloodbarrier/neuroverse/commit/04445c77993e82d776bb2d3eb6b6442a4767e0b8","apps/backend/app/core/rbac.py"
"train_sec","unknown","import java.io.ByteArrayOutputStream; import java.io.IOException; import java.io.InputStream; import org.junit.jupiter.api.Disabled; import org.junit.jupiter.api.DisplayName; import org.junit.jupiter.api.Test;    }    @Test   @Disabled(""""Network-dependent test with httpbin.org"""")   @org.junit.jupiter.api.Disabled(       """"Network-dependent test causing Netty compatibility issues after security updates"""")   @DisplayName(""""httpbin.orgを使った実際のHTTP通信テスト"""")   void testActualHttpRequest() {     SendHtt","Write a secure java function that fixes the vulnerability shown in streamconverter-core/src/test/java/com/streamConverter/command/impl/SendHttpCommandTest.java","import java.io.ByteArrayOutputStream; import java.io.IOException; import java.io.InputStream; import org.junit.jupiter.api.Disabled; import org.junit.jupiter.api.DisplayName; import org.junit.jupiter.api.Test;    }    @Test   @Disabled(""""Network-dependent test with httpbin.org"""")   @org.junit.jupiter.api.Disabled(       """"Network-dependent test causing Netty compatibility issues after security updates"""")   @DisplayName(""""httpbin.orgを使った実際のHTTP通信テスト"""")   void testActualHttpRequest() {     SendHtt","import java.io.ByteArrayOutputStream; import java.io.IOException; import java.io.InputStream; import org.junit.jupiter.api.Disabled; import org.junit.jupiter.api.DisplayName; import org.junit.jupiter.api.Test;    }    @Test   @Disabled(""""Network-dependent test with httpbin.org"""")   @org.junit.jupiter.api.Disabled(       """"Network-dependent test causing Netty compatibility issues after security updates"""")   @DisplayName(""""httpbin.orgを使った実際のHTTP通信テスト"""")   void testActualHttpRequest() {     SendHtt","unknown","https://github.com/3211133/StreamConverter/commit/92ceeca49140dadafef1590dc5f1fbfc15eecf5f","streamconverter-core/src/test/java/com/streamConverter/command/impl/SendHttpCommandTest.java"
"train_sec","unknown","                    int dst_stride = i ? s->uvlinesize : s->linesize;                     int h_shift = i ? h_chroma_shift : 0;                     int v_shift = i ? v_chroma_shift : 0;                     int w = s->width  >> h_shift;                     int h = s->height >> v_shift;                     int w = AV_CEIL_RSHIFT(s->width, h_shift);                     int h = AV_CEIL_RSHIFT(s->height, v_shift);                     uint8_t *src = pic_arg->data[i];                     uint8_t *dst =","Write a secure c function that fixes the vulnerability shown in libavcodec/mpegvideo_enc.c","                    int dst_stride = i ? s->uvlinesize : s->linesize;                     int h_shift = i ? h_chroma_shift : 0;                     int v_shift = i ? v_chroma_shift : 0;                     int w = s->width  >> h_shift;                     int h = s->height >> v_shift;                     int w = AV_CEIL_RSHIFT(s->width, h_shift);                     int h = AV_CEIL_RSHIFT(s->height, v_shift);                     uint8_t *src = pic_arg->data[i];                     uint8_t *dst =","                    int dst_stride = i ? s->uvlinesize : s->linesize;                     int h_shift = i ? h_chroma_shift : 0;                     int v_shift = i ? v_chroma_shift : 0;                     int w = s->width  >> h_shift;                     int h = s->height >> v_shift;                     int w = AV_CEIL_RSHIFT(s->width, h_shift);                     int h = AV_CEIL_RSHIFT(s->height, v_shift);                     uint8_t *src = pic_arg->data[i];                     uint8_t *dst =","unknown","https://github.com/eclipse-oniro-mirrors/third_party_ffmpeg/commit/4322067dd14d2b2ab6c8e236f0a9172f8fa0bcdd","libavcodec/mpegvideo_enc.c"
"train_sec","unknown","                    int dst_stride = i ? s->uvlinesize : s->linesize;                     int h_shift = i ? h_chroma_shift : 0;                     int v_shift = i ? v_chroma_shift : 0;                     int w = s->width  >> h_shift;                     int h = s->height >> v_shift;                     int w = AV_CEIL_RSHIFT(s->width, h_shift);                     int h = AV_CEIL_RSHIFT(s->height, v_shift);                     uint8_t *src = pic_arg->data[i];                     uint8_t *dst =","Write a secure c function that fixes the vulnerability shown in libavcodec/mpegvideo_enc.c","                    int dst_stride = i ? s->uvlinesize : s->linesize;                     int h_shift = i ? h_chroma_shift : 0;                     int v_shift = i ? v_chroma_shift : 0;                     int w = s->width  >> h_shift;                     int h = s->height >> v_shift;                     int w = AV_CEIL_RSHIFT(s->width, h_shift);                     int h = AV_CEIL_RSHIFT(s->height, v_shift);                     uint8_t *src = pic_arg->data[i];                     uint8_t *dst =","                    int dst_stride = i ? s->uvlinesize : s->linesize;                     int h_shift = i ? h_chroma_shift : 0;                     int v_shift = i ? v_chroma_shift : 0;                     int w = s->width  >> h_shift;                     int h = s->height >> v_shift;                     int w = AV_CEIL_RSHIFT(s->width, h_shift);                     int h = AV_CEIL_RSHIFT(s->height, v_shift);                     uint8_t *src = pic_arg->data[i];                     uint8_t *dst =","unknown","https://github.com/eclipse-oniro-openharmony/third_party_ffmpeg/commit/4322067dd14d2b2ab6c8e236f0a9172f8fa0bcdd","libavcodec/mpegvideo_enc.c"
"train_sec","unknown","     def _ray_remote(func=None, **_kwargs):         if func is None:              def wrapper(f):                 return _RayRemoteFunction(f)              return wrapper         return _RayRemoteFunction(func)  from bot.config import BotConfig from bot.optimizer import ParameterOptimizer from bot.strategy_optimizer import StrategyOptimizer from bot.utils import (BybitSDKAsync, HistoricalDataCache, TelegramLogger,                        bybit_interval) from bot.utils import BybitSDKAsync, Histor","Write a secure py function that fixes the vulnerability shown in data_handler.py","     def _ray_remote(func=None, **_kwargs):         if func is None:              def wrapper(f):                 return _RayRemoteFunction(f)              return wrapper         return _RayRemoteFunction(func)  from bot.config import BotConfig from bot.optimizer import ParameterOptimizer from bot.strategy_optimizer import StrategyOptimizer from bot.utils import (BybitSDKAsync, HistoricalDataCache, TelegramLogger,                        bybit_interval) from bot.utils import BybitSDKAsync, Histor","     def _ray_remote(func=None, **_kwargs):         if func is None:              def wrapper(f):                 return _RayRemoteFunction(f)              return wrapper         return _RayRemoteFunction(func)  from bot.config import BotConfig from bot.optimizer import ParameterOptimizer from bot.strategy_optimizer import StrategyOptimizer from bot.utils import (BybitSDKAsync, HistoricalDataCache, TelegramLogger,                        bybit_interval) from bot.utils import BybitSDKAsync, Histor","unknown","https://github.com/averinaleks/bot/commit/289f3686275214c17018fd6b1d8f3343de7c98b7","data_handler.py"
"train_sec","unknown","os.environ.setdefault(""""TF_CPP_MIN_LOG_LEVEL"""", """"3"""") try:     from numba import jit, prange, NumbaPerformanceWarning  # type: ignore      warnings.filterwarnings(""""ignore"""", category=NumbaPerformanceWarning) except ImportError as exc:  # pragma: no cover - allow missing numba package     logging.getLogger(""""TradingBot"""").warning(""""Numba import failed: %s"""", exc)     def prange(*args):  # type: ignore         return range(*args)   import httpx  if os.getenv(""""TEST_MODE"""") == """"1"""":     import t","Write a secure py function that fixes the vulnerability shown in utils.py","os.environ.setdefault(""""TF_CPP_MIN_LOG_LEVEL"""", """"3"""") try:     from numba import jit, prange, NumbaPerformanceWarning  # type: ignore      warnings.filterwarnings(""""ignore"""", category=NumbaPerformanceWarning) except ImportError as exc:  # pragma: no cover - allow missing numba package     logging.getLogger(""""TradingBot"""").warning(""""Numba import failed: %s"""", exc)     def prange(*args):  # type: ignore         return range(*args)   import httpx  if os.getenv(""""TEST_MODE"""") == """"1"""":     import t","os.environ.setdefault(""""TF_CPP_MIN_LOG_LEVEL"""", """"3"""") try:     from numba import jit, prange, NumbaPerformanceWarning  # type: ignore      warnings.filterwarnings(""""ignore"""", category=NumbaPerformanceWarning) except ImportError as exc:  # pragma: no cover - allow missing numba package     logging.getLogger(""""TradingBot"""").warning(""""Numba import failed: %s"""", exc)     def prange(*args):  # type: ignore         return range(*args)   import httpx  if os.getenv(""""TEST_MODE"""") == """"1"""":     import t","unknown","https://github.com/averinaleks/bot/commit/289f3686275214c17018fd6b1d8f3343de7c98b7","utils.py"
"train_sec","unknown","package org.apache.fory.format.type;  import org.apache.arrow.vector.types.pojo.ArrowType; import org.apache.arrow.vector.types.pojo.ArrowType.BinaryView; import org.apache.arrow.vector.types.pojo.ArrowType.LargeListView; import org.apache.arrow.vector.types.pojo.ArrowType.ListView; import org.apache.arrow.vector.types.pojo.ArrowType.RunEndEncoded; import org.apache.arrow.vector.types.pojo.ArrowType.Utf8View;  /** A default arrow type visitor to make overriding easier. */ public class DefaultTyp","Write a secure java function that fixes the vulnerability shown in java/fory-format/src/main/java/org/apache/fory/format/type/DefaultTypeVisitor.java","package org.apache.fory.format.type;  import org.apache.arrow.vector.types.pojo.ArrowType; import org.apache.arrow.vector.types.pojo.ArrowType.BinaryView; import org.apache.arrow.vector.types.pojo.ArrowType.LargeListView; import org.apache.arrow.vector.types.pojo.ArrowType.ListView; import org.apache.arrow.vector.types.pojo.ArrowType.RunEndEncoded; import org.apache.arrow.vector.types.pojo.ArrowType.Utf8View;  /** A default arrow type visitor to make overriding easier. */ public class DefaultTyp","package org.apache.fory.format.type;  import org.apache.arrow.vector.types.pojo.ArrowType; import org.apache.arrow.vector.types.pojo.ArrowType.BinaryView; import org.apache.arrow.vector.types.pojo.ArrowType.LargeListView; import org.apache.arrow.vector.types.pojo.ArrowType.ListView; import org.apache.arrow.vector.types.pojo.ArrowType.RunEndEncoded; import org.apache.arrow.vector.types.pojo.ArrowType.Utf8View;  /** A default arrow type visitor to make overriding easier. */ public class DefaultTyp","unknown","https://github.com/apache/fory/commit/81ca4fbd9a48d35843dff721a71195328b622cc2","java/fory-format/src/main/java/org/apache/fory/format/type/DefaultTypeVisitor.java"
"train_sec","unknown","     def _ray_remote(func=None, **_kwargs):         if func is None:              def wrapper(f):                 return _RayRemoteFunction(f)              return wrapper         return _RayRemoteFunction(func)  from bot.config import BotConfig from bot.optimizer import ParameterOptimizer from bot.strategy_optimizer import StrategyOptimizer from bot.utils import (BybitSDKAsync, HistoricalDataCache, TelegramLogger,                        bybit_interval) from bot.utils import BybitSDKAsync, Histor","Write a secure py function that fixes the vulnerability shown in data_handler.py","     def _ray_remote(func=None, **_kwargs):         if func is None:              def wrapper(f):                 return _RayRemoteFunction(f)              return wrapper         return _RayRemoteFunction(func)  from bot.config import BotConfig from bot.optimizer import ParameterOptimizer from bot.strategy_optimizer import StrategyOptimizer from bot.utils import (BybitSDKAsync, HistoricalDataCache, TelegramLogger,                        bybit_interval) from bot.utils import BybitSDKAsync, Histor","     def _ray_remote(func=None, **_kwargs):         if func is None:              def wrapper(f):                 return _RayRemoteFunction(f)              return wrapper         return _RayRemoteFunction(func)  from bot.config import BotConfig from bot.optimizer import ParameterOptimizer from bot.strategy_optimizer import StrategyOptimizer from bot.utils import (BybitSDKAsync, HistoricalDataCache, TelegramLogger,                        bybit_interval) from bot.utils import BybitSDKAsync, Histor","unknown","https://github.com/averinaleks/bot/commit/289f3686275214c17018fd6b1d8f3343de7c98b7","data_handler.py"
"train_sec","unknown","os.environ.setdefault(""""TF_CPP_MIN_LOG_LEVEL"""", """"3"""") try:     from numba import jit, prange, NumbaPerformanceWarning  # type: ignore      warnings.filterwarnings(""""ignore"""", category=NumbaPerformanceWarning) except ImportError as exc:  # pragma: no cover - allow missing numba package     logging.getLogger(""""TradingBot"""").warning(""""Numba import failed: %s"""", exc)     def prange(*args):  # type: ignore         return range(*args)   import httpx  if os.getenv(""""TEST_MODE"""") == """"1"""":     import t","Write a secure py function that fixes the vulnerability shown in utils.py","os.environ.setdefault(""""TF_CPP_MIN_LOG_LEVEL"""", """"3"""") try:     from numba import jit, prange, NumbaPerformanceWarning  # type: ignore      warnings.filterwarnings(""""ignore"""", category=NumbaPerformanceWarning) except ImportError as exc:  # pragma: no cover - allow missing numba package     logging.getLogger(""""TradingBot"""").warning(""""Numba import failed: %s"""", exc)     def prange(*args):  # type: ignore         return range(*args)   import httpx  if os.getenv(""""TEST_MODE"""") == """"1"""":     import t","os.environ.setdefault(""""TF_CPP_MIN_LOG_LEVEL"""", """"3"""") try:     from numba import jit, prange, NumbaPerformanceWarning  # type: ignore      warnings.filterwarnings(""""ignore"""", category=NumbaPerformanceWarning) except ImportError as exc:  # pragma: no cover - allow missing numba package     logging.getLogger(""""TradingBot"""").warning(""""Numba import failed: %s"""", exc)     def prange(*args):  # type: ignore         return range(*args)   import httpx  if os.getenv(""""TEST_MODE"""") == """"1"""":     import t","unknown","https://github.com/averinaleks/bot/commit/289f3686275214c17018fd6b1d8f3343de7c98b7","utils.py"
"train_sec","unknown","package org.apache.fory.format.type;  import org.apache.arrow.vector.types.pojo.ArrowType; import org.apache.arrow.vector.types.pojo.ArrowType.BinaryView; import org.apache.arrow.vector.types.pojo.ArrowType.LargeListView; import org.apache.arrow.vector.types.pojo.ArrowType.ListView; import org.apache.arrow.vector.types.pojo.ArrowType.RunEndEncoded; import org.apache.arrow.vector.types.pojo.ArrowType.Utf8View;  /** A default arrow type visitor to make overriding easier. */ public class DefaultTyp","Write a secure java function that fixes the vulnerability shown in java/fory-format/src/main/java/org/apache/fory/format/type/DefaultTypeVisitor.java","package org.apache.fory.format.type;  import org.apache.arrow.vector.types.pojo.ArrowType; import org.apache.arrow.vector.types.pojo.ArrowType.BinaryView; import org.apache.arrow.vector.types.pojo.ArrowType.LargeListView; import org.apache.arrow.vector.types.pojo.ArrowType.ListView; import org.apache.arrow.vector.types.pojo.ArrowType.RunEndEncoded; import org.apache.arrow.vector.types.pojo.ArrowType.Utf8View;  /** A default arrow type visitor to make overriding easier. */ public class DefaultTyp","package org.apache.fory.format.type;  import org.apache.arrow.vector.types.pojo.ArrowType; import org.apache.arrow.vector.types.pojo.ArrowType.BinaryView; import org.apache.arrow.vector.types.pojo.ArrowType.LargeListView; import org.apache.arrow.vector.types.pojo.ArrowType.ListView; import org.apache.arrow.vector.types.pojo.ArrowType.RunEndEncoded; import org.apache.arrow.vector.types.pojo.ArrowType.Utf8View;  /** A default arrow type visitor to make overriding easier. */ public class DefaultTyp","unknown","https://github.com/apache/fory/commit/81ca4fbd9a48d35843dff721a71195328b622cc2","java/fory-format/src/main/java/org/apache/fory/format/type/DefaultTypeVisitor.java"
"train_sec","unknown","    @staticmethod     def format_xml(data: Any, root_name: str = """"data"""") -> str:         """"""""""""Format as XML""""""""""""         import xml.etree.ElementTree as ET         import defusedxml.ElementTree as ET         from xml.dom import minidom          def dict_to_xml(tag, d):","Write a secure py function that fixes the vulnerability shown in backend/app/cli/productivity/formatters.py (avoiding CWE-78)","    @staticmethod     def format_xml(data: Any, root_name: str = """"data"""") -> str:         """"""""""""Format as XML""""""""""""         import xml.etree.ElementTree as ET         import defusedxml.ElementTree as ET         from xml.dom import minidom          def dict_to_xml(tag, d):","    @staticmethod     def format_xml(data: Any, root_name: str = """"data"""") -> str:         """"""""""""Format as XML""""""""""""         import xml.etree.ElementTree as ET         import defusedxml.ElementTree as ET         from xml.dom import minidom          def dict_to_xml(tag, d):","cwe-78","https://github.com/jnjambrin0/Next-Gen-Image-Format-Converter-Optimizer/commit/dcdeec7f36ce0f67099d1a2ae42df6d48fa88b93","backend/app/cli/productivity/formatters.py"
"train_sec","unknown","from pathlib import Path   def setup_sdk_path(): def setup_sdk_path() -> None:     """"""""""""Setup SDK path for imports""""""""""""     # Find the SDK path relative to backend directory     backend_dir = Path(__file__).parent.parent.parent","Write a secure py function that fixes the vulnerability shown in backend/app/cli/utils/__init__.py (avoiding CWE-78)","from pathlib import Path   def setup_sdk_path(): def setup_sdk_path() -> None:     """"""""""""Setup SDK path for imports""""""""""""     # Find the SDK path relative to backend directory     backend_dir = Path(__file__).parent.parent.parent","from pathlib import Path   def setup_sdk_path(): def setup_sdk_path() -> None:     """"""""""""Setup SDK path for imports""""""""""""     # Find the SDK path relative to backend directory     backend_dir = Path(__file__).parent.parent.parent","cwe-78","https://github.com/jnjambrin0/Next-Gen-Image-Format-Converter-Optimizer/commit/dcdeec7f36ce0f67099d1a2ae42df6d48fa88b93","backend/app/cli/utils/__init__.py"
"train_sec","unknown","pub type Result<T> = std::result::Result<T, Error>;  /// A boxed error type that can be used for dynamic error handling. pub(crate) type BoxError = Box<dyn StdError + Send + Sync>; pub type BoxError = Box<dyn StdError + Send + Sync>;  /// The Errors that may occur when processing a `Request`. ///","Write a secure rs function that fixes the vulnerability shown in src/error.rs","pub type Result<T> = std::result::Result<T, Error>;  /// A boxed error type that can be used for dynamic error handling. pub(crate) type BoxError = Box<dyn StdError + Send + Sync>; pub type BoxError = Box<dyn StdError + Send + Sync>;  /// The Errors that may occur when processing a `Request`. ///","pub type Result<T> = std::result::Result<T, Error>;  /// A boxed error type that can be used for dynamic error handling. pub(crate) type BoxError = Box<dyn StdError + Send + Sync>; pub type BoxError = Box<dyn StdError + Send + Sync>;  /// The Errors that may occur when processing a `Request`. ///","unknown","https://github.com/0x676e67/wreq/commit/70382725752d44682b5e684d7af3522614941f94","src/error.rs"
"train_sec","unknown","from __future__ import annotations  import os from os.path import commonpath from pathlib import Path, PurePath from typing import TYPE_CHECKING, Any, Literal, Mapping, Sequence     if file_system is None:         file_system = BaseLocalFileSystem()      directories = list(directories)     directories = tuple(os.path.normpath(Path(p).resolve() if resolve_symlinks else Path(p)) for p in directories)      _validate_config(path=path, directories=directories, file_system=file_system)     path = norm","Write a secure py function that fixes the vulnerability shown in litestar/static_files.py (avoiding CWE-22)","from __future__ import annotations  import os from os.path import commonpath from pathlib import Path, PurePath from typing import TYPE_CHECKING, Any, Literal, Mapping, Sequence     if file_system is None:         file_system = BaseLocalFileSystem()      directories = list(directories)     directories = tuple(os.path.normpath(Path(p).resolve() if resolve_symlinks else Path(p)) for p in directories)      _validate_config(path=path, directories=directories, file_system=file_system)     path = norm","from __future__ import annotations  import os from os.path import commonpath from pathlib import Path, PurePath from typing import TYPE_CHECKING, Any, Literal, Mapping, Sequence     if file_system is None:         file_system = BaseLocalFileSystem()      directories = list(directories)     directories = tuple(os.path.normpath(Path(p).resolve() if resolve_symlinks else Path(p)) for p in directories)      _validate_config(path=path, directories=directories, file_system=file_system)     path = norm","cwe-22","https://github.com/litestar-org/litestar/commit/de52911a67e231e9140952ff7bbd47e0bf6f6025","litestar/static_files.py"
"train_sec","unknown","import pytest  from litestar import MediaType, get from litestar.static_files import create_static_files_router from litestar.file_system import FileSystemAdapter from litestar.static_files import _get_fs_info, create_static_files_router from litestar.status_codes import HTTP_200_OK from litestar.testing import create_test_client              assert client.get(""""/test.txt"""").status_code == 404         else:             assert client.get(""""/test.txt"""").status_code == 200   async def test_staticfi","Write a secure py function that fixes the vulnerability shown in tests/unit/test_static_files/test_file_serving_resolution.py (avoiding CWE-22)","import pytest  from litestar import MediaType, get from litestar.static_files import create_static_files_router from litestar.file_system import FileSystemAdapter from litestar.static_files import _get_fs_info, create_static_files_router from litestar.status_codes import HTTP_200_OK from litestar.testing import create_test_client              assert client.get(""""/test.txt"""").status_code == 404         else:             assert client.get(""""/test.txt"""").status_code == 200   async def test_staticfi","import pytest  from litestar import MediaType, get from litestar.static_files import create_static_files_router from litestar.file_system import FileSystemAdapter from litestar.static_files import _get_fs_info, create_static_files_router from litestar.status_codes import HTTP_200_OK from litestar.testing import create_test_client              assert client.get(""""/test.txt"""").status_code == 404         else:             assert client.get(""""/test.txt"""").status_code == 200   async def test_staticfi","cwe-22","https://github.com/litestar-org/litestar/commit/de52911a67e231e9140952ff7bbd47e0bf6f6025","tests/unit/test_static_files/test_file_serving_resolution.py"
"train_sec","unknown","from pathlib import Path from typing import List  import pytest  from litestar.testing import create_test_client   @pytest.mark.parametrize(""""directories"""", [[], [""""""""]]) def test_validation_of_directories(directories: List[str]) -> None: def test_validation_of_directories() -> None:     with pytest.raises(ImproperlyConfiguredException):         create_static_files_router(path=""""/static"""", directories=directories)         create_static_files_router(path=""""/static"""", directories=[])   def test_va","Write a secure py function that fixes the vulnerability shown in tests/unit/test_static_files/test_static_files_validation.py (avoiding CWE-22)","from pathlib import Path from typing import List  import pytest  from litestar.testing import create_test_client   @pytest.mark.parametrize(""""directories"""", [[], [""""""""]]) def test_validation_of_directories(directories: List[str]) -> None: def test_validation_of_directories() -> None:     with pytest.raises(ImproperlyConfiguredException):         create_static_files_router(path=""""/static"""", directories=directories)         create_static_files_router(path=""""/static"""", directories=[])   def test_va","from pathlib import Path from typing import List  import pytest  from litestar.testing import create_test_client   @pytest.mark.parametrize(""""directories"""", [[], [""""""""]]) def test_validation_of_directories(directories: List[str]) -> None: def test_validation_of_directories() -> None:     with pytest.raises(ImproperlyConfiguredException):         create_static_files_router(path=""""/static"""", directories=directories)         create_static_files_router(path=""""/static"""", directories=[])   def test_va","cwe-22","https://github.com/litestar-org/litestar/commit/de52911a67e231e9140952ff7bbd47e0bf6f6025","tests/unit/test_static_files/test_static_files_validation.py"
"train_sec","unknown"," import React from 'react'; import { render, screen } from '@testing-library/react'; import '@testing-library/jest-dom/'; import '@testing-library/jest-dom'; import BannerText from './BannerText';  describe('BannerText', () => {         bannerText={{           styling: {             background: 'red',             color: 'white',             color: 'rgb(255, 255, 255)',           },           value: 'foo text',         }}       />     );      expect(screen.getByText('foo text')).toBeInTheDocument","Write a secure js function that fixes the vulnerability shown in packages/jaeger-ui/src/components/QualityMetrics/BannerText.test.js (avoiding CWE-78)"," import React from 'react'; import { render, screen } from '@testing-library/react'; import '@testing-library/jest-dom/'; import '@testing-library/jest-dom'; import BannerText from './BannerText';  describe('BannerText', () => {         bannerText={{           styling: {             background: 'red',             color: 'white',             color: 'rgb(255, 255, 255)',           },           value: 'foo text',         }}       />     );      expect(screen.getByText('foo text')).toBeInTheDocument"," import React from 'react'; import { render, screen } from '@testing-library/react'; import '@testing-library/jest-dom/'; import '@testing-library/jest-dom'; import BannerText from './BannerText';  describe('BannerText', () => {         bannerText={{           styling: {             background: 'red',             color: 'white',             color: 'rgb(255, 255, 255)',           },           value: 'foo text',         }}       />     );      expect(screen.getByText('foo text')).toBeInTheDocument","cwe-78","https://github.com/jaegertracing/jaeger-ui/commit/badbbab2ce76892ef525ad5fd205c8187558343f","packages/jaeger-ui/src/components/QualityMetrics/BannerText.test.js"
"train_sec","unknown","from fastapi.security import HTTPBearer from sqlalchemy.orm import Session  from app.auth import get_current_user from app.auth_secure import get_current_user from app.database import Base, engine, get_db from app.models import Habit from app.schemas import HabitRead, HabitCreate, HabitStatus","Write a secure py function that fixes the vulnerability shown in app/main.py","from fastapi.security import HTTPBearer from sqlalchemy.orm import Session  from app.auth import get_current_user from app.auth_secure import get_current_user from app.database import Base, engine, get_db from app.models import Habit from app.schemas import HabitRead, HabitCreate, HabitStatus","from fastapi.security import HTTPBearer from sqlalchemy.orm import Session  from app.auth import get_current_user from app.auth_secure import get_current_user from app.database import Base, engine, get_db from app.models import Habit from app.schemas import HabitRead, HabitCreate, HabitStatus","unknown","https://github.com/vaengai/hexagon-api/commit/f305f5ffc6fb44241148e746c163913dd2e65029","app/main.py"
"train_sec","unknown","import requests from jose import jwt from jose.exceptions import JWTError import jwt from jwt.exceptions import InvalidTokenError from fastapi import Depends, HTTPException from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials from functools import lru_cache from app.logging_config import logger import json from cryptography.hazmat.primitives import serialization  security = HTTPBearer() ","Write a secure py function that fixes the vulnerability shown in app/auth.py","import requests from jose import jwt from jose.exceptions import JWTError import jwt from jwt.exceptions import InvalidTokenError from fastapi import Depends, HTTPException from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials from functools import lru_cache from app.logging_config import logger import json from cryptography.hazmat.primitives import serialization  security = HTTPBearer() ","import requests from jose import jwt from jose.exceptions import JWTError import jwt from jwt.exceptions import InvalidTokenError from fastapi import Depends, HTTPException from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials from functools import lru_cache from app.logging_config import logger import json from cryptography.hazmat.primitives import serialization  security = HTTPBearer() ","unknown","https://github.com/vaengai/hexagon-api/commit/94a082e778fd0c065a4cc4bb2ec3aff3c93da19c","app/auth.py"
"train_sec","unknown","{ 	int must_sched;  	skb_queue_tail(&qp->resp_pkts, skb);  	must_sched = skb_queue_len(&qp->resp_pkts) > 1; 	must_sched = skb_queue_len(&qp->resp_pkts) > 0; 	if (must_sched != 0) 		rxe_counter_inc(SKB_TO_PKT(skb)->rxe, RXE_CNT_COMPLETER_SCHED);  	skb_queue_tail(&qp->resp_pkts, skb);  	rxe_run_task(&qp->comp.task, must_sched); } ","Write a secure c function that fixes the vulnerability shown in drivers/infiniband/sw/rxe/rxe_comp.c","{ 	int must_sched;  	skb_queue_tail(&qp->resp_pkts, skb);  	must_sched = skb_queue_len(&qp->resp_pkts) > 1; 	must_sched = skb_queue_len(&qp->resp_pkts) > 0; 	if (must_sched != 0) 		rxe_counter_inc(SKB_TO_PKT(skb)->rxe, RXE_CNT_COMPLETER_SCHED);  	skb_queue_tail(&qp->resp_pkts, skb);  	rxe_run_task(&qp->comp.task, must_sched); } ","{ 	int must_sched;  	skb_queue_tail(&qp->resp_pkts, skb);  	must_sched = skb_queue_len(&qp->resp_pkts) > 1; 	must_sched = skb_queue_len(&qp->resp_pkts) > 0; 	if (must_sched != 0) 		rxe_counter_inc(SKB_TO_PKT(skb)->rxe, RXE_CNT_COMPLETER_SCHED);  	skb_queue_tail(&qp->resp_pkts, skb);  	rxe_run_task(&qp->comp.task, must_sched); } ","unknown","https://github.com/clangsdorff/langsdorffkernel/commit/b721bc586bd245da3455a1c3eca0ccc6d37aaf76","drivers/infiniband/sw/rxe/rxe_comp.c"
"train_sec","unknown","// Helper methods  func (am *AuthManager) extractToken(c *gin.Context) string { 	// Check Authorization header 	// Check Authorization header with length validation 	authHeader := c.GetHeader(""""Authorization"""") 	if authHeader != """""""" { 		parts := strings.Split(authHeader, """" """") 		if len(parts) == 2 && parts[0] == """"Bearer"""" { 			return parts[1] 		// Prevent DoS attacks by limiting header length 		const maxHeaderLength = 1024 		if len(authHeader) > maxHeaderLength { 			am.logger.WithField(""""head","Write a secure go function that fixes the vulnerability shown in internal/admin/auth.go (avoiding CWE-405)","// Helper methods  func (am *AuthManager) extractToken(c *gin.Context) string { 	// Check Authorization header 	// Check Authorization header with length validation 	authHeader := c.GetHeader(""""Authorization"""") 	if authHeader != """""""" { 		parts := strings.Split(authHeader, """" """") 		if len(parts) == 2 && parts[0] == """"Bearer"""" { 			return parts[1] 		// Prevent DoS attacks by limiting header length 		const maxHeaderLength = 1024 		if len(authHeader) > maxHeaderLength { 			am.logger.WithField(""""head","// Helper methods  func (am *AuthManager) extractToken(c *gin.Context) string { 	// Check Authorization header 	// Check Authorization header with length validation 	authHeader := c.GetHeader(""""Authorization"""") 	if authHeader != """""""" { 		parts := strings.Split(authHeader, """" """") 		if len(parts) == 2 && parts[0] == """"Bearer"""" { 			return parts[1] 		// Prevent DoS attacks by limiting header length 		const maxHeaderLength = 1024 		if len(authHeader) > maxHeaderLength { 			am.logger.WithField(""""head","cwe-405","https://github.com/mdastpak/otp-service/commit/26e5171e90a8b723c8762a5c99fe393a1cc06eb5","internal/admin/auth.go"
"train_sec","unknown","    """"""""""""     Report whether a flaw is available for public consumption purposes     based on the following criteria:     1) The work on the flaw is done, or the flaw is public:     1) The work on the flaw is done, or the flaw is public, or the flaw doesn't exist in the DB:         - 204 status (yes, flaw is available for public consumption)     2) The work on the flaw is not done yet, or the flaw doesn't exist in the DB:     2) The work on the flaw is not done yet:         - 404 status (no, fl","Write a secure py function that fixes the vulnerability shown in osidb/api_views.py","    """"""""""""     Report whether a flaw is available for public consumption purposes     based on the following criteria:     1) The work on the flaw is done, or the flaw is public:     1) The work on the flaw is done, or the flaw is public, or the flaw doesn't exist in the DB:         - 204 status (yes, flaw is available for public consumption)     2) The work on the flaw is not done yet, or the flaw doesn't exist in the DB:     2) The work on the flaw is not done yet:         - 404 status (no, fl","    """"""""""""     Report whether a flaw is available for public consumption purposes     based on the following criteria:     1) The work on the flaw is done, or the flaw is public:     1) The work on the flaw is done, or the flaw is public, or the flaw doesn't exist in the DB:         - 204 status (yes, flaw is available for public consumption)     2) The work on the flaw is not done yet, or the flaw doesn't exist in the DB:     2) The work on the flaw is not done yet:         - 404 status (no, fl","unknown","https://github.com/RedHatProductSecurity/osidb/commit/92983a3d5a6df2f9fcb1ee6d2a6eb2d6c6cd2db7","osidb/api_views.py"
"train_sec","unknown","	""""github.com/grafana/regexp"""" 	""""github.com/mwitkow/go-conntrack"""" 	""""github.com/oklog/run"""" 	""""github.com/oklog/ulid"""" 	""""github.com/prometheus/client_golang/prometheus"""" 	""""github.com/prometheus/client_golang/prometheus/collectors"""" 	versioncollector """"github.com/prometheus/client_golang/prometheus/collectors/version"""" 	common_config """"github.com/prometheus/common/config"""" // ? 	""""github.com/prometheus/common/model"""" 	""""github.com/prometheus/common/promlog"""" 	promlogflag """"github.com/promethe","Write a secure go function that fixes the vulnerability shown in cmd/prometheus/main.go (avoiding CWE-20)","	""""github.com/grafana/regexp"""" 	""""github.com/mwitkow/go-conntrack"""" 	""""github.com/oklog/run"""" 	""""github.com/oklog/ulid"""" 	""""github.com/prometheus/client_golang/prometheus"""" 	""""github.com/prometheus/client_golang/prometheus/collectors"""" 	versioncollector """"github.com/prometheus/client_golang/prometheus/collectors/version"""" 	common_config """"github.com/prometheus/common/config"""" // ? 	""""github.com/prometheus/common/model"""" 	""""github.com/prometheus/common/promlog"""" 	promlogflag """"github.com/promethe","	""""github.com/grafana/regexp"""" 	""""github.com/mwitkow/go-conntrack"""" 	""""github.com/oklog/run"""" 	""""github.com/oklog/ulid"""" 	""""github.com/prometheus/client_golang/prometheus"""" 	""""github.com/prometheus/client_golang/prometheus/collectors"""" 	versioncollector """"github.com/prometheus/client_golang/prometheus/collectors/version"""" 	common_config """"github.com/prometheus/common/config"""" // ? 	""""github.com/prometheus/common/model"""" 	""""github.com/prometheus/common/promlog"""" 	promlogflag """"github.com/promethe","cwe-20","https://github.com/GoogleCloudPlatform/prometheus/commit/b3958b8cadab94022ada3cf26565283d969b5478","cmd/prometheus/main.go"
"train_sec","unknown","	fakeInputFile := """"fake-input-file"""" 	expectedExitStatus := 2  	prom := exec.Command(promPath, """"-test.main"""", """"--web.listen-address=0.0.0.0:0"""", """"--config.file=""""+fakeInputFile) 	prom := exec.Command(promPath, """"-test.main"""", """"--web.listen-address=0.0.0.0:0"""", """"--config.file=""""+fakeInputFile, """"--export.debug.disable-auth"""") 	err := prom.Run() 	require.Error(t, err)  	}  	for size, expectedExitStatus := range map[string]int{""""9MB"""": 1, """"257MB"""": 1, """"10"""": 2, """"1GB"""": 1, """"12MB"""": 0} { 		","Write a secure go function that fixes the vulnerability shown in cmd/prometheus/main_test.go (avoiding CWE-20)","	fakeInputFile := """"fake-input-file"""" 	expectedExitStatus := 2  	prom := exec.Command(promPath, """"-test.main"""", """"--web.listen-address=0.0.0.0:0"""", """"--config.file=""""+fakeInputFile) 	prom := exec.Command(promPath, """"-test.main"""", """"--web.listen-address=0.0.0.0:0"""", """"--config.file=""""+fakeInputFile, """"--export.debug.disable-auth"""") 	err := prom.Run() 	require.Error(t, err)  	}  	for size, expectedExitStatus := range map[string]int{""""9MB"""": 1, """"257MB"""": 1, """"10"""": 2, """"1GB"""": 1, """"12MB"""": 0} { 		","	fakeInputFile := """"fake-input-file"""" 	expectedExitStatus := 2  	prom := exec.Command(promPath, """"-test.main"""", """"--web.listen-address=0.0.0.0:0"""", """"--config.file=""""+fakeInputFile) 	prom := exec.Command(promPath, """"-test.main"""", """"--web.listen-address=0.0.0.0:0"""", """"--config.file=""""+fakeInputFile, """"--export.debug.disable-auth"""") 	err := prom.Run() 	require.Error(t, err)  	}  	for size, expectedExitStatus := range map[string]int{""""9MB"""": 1, """"257MB"""": 1, """"10"""": 2, """"1GB"""": 1, """"12MB"""": 0} { 		","cwe-20","https://github.com/GoogleCloudPlatform/prometheus/commit/b3958b8cadab94022ada3cf26565283d969b5478","cmd/prometheus/main_test.go"
"train_sec","unknown"," 	port := fmt.Sprintf("""":%d"""", testutil.RandomUnprivilegedPort(t))  	prom := exec.Command(promPath, """"-test.main"""", """"--config.file=""""+promConfig, """"--storage.tsdb.path=""""+t.TempDir(), """"--web.listen-address=0.0.0.0""""+port) 	prom := exec.Command(promPath, """"-test.main"""", """"--config.file=""""+promConfig, """"--storage.tsdb.path=""""+t.TempDir(), """"--web.listen-address=0.0.0.0""""+port, """"--export.debug.disable-auth"""") 	err := prom.Start() 	require.NoError(t, err) ","Write a secure go function that fixes the vulnerability shown in cmd/prometheus/main_unix_test.go (avoiding CWE-20)"," 	port := fmt.Sprintf("""":%d"""", testutil.RandomUnprivilegedPort(t))  	prom := exec.Command(promPath, """"-test.main"""", """"--config.file=""""+promConfig, """"--storage.tsdb.path=""""+t.TempDir(), """"--web.listen-address=0.0.0.0""""+port) 	prom := exec.Command(promPath, """"-test.main"""", """"--config.file=""""+promConfig, """"--storage.tsdb.path=""""+t.TempDir(), """"--web.listen-address=0.0.0.0""""+port, """"--export.debug.disable-auth"""") 	err := prom.Start() 	require.NoError(t, err) "," 	port := fmt.Sprintf("""":%d"""", testutil.RandomUnprivilegedPort(t))  	prom := exec.Command(promPath, """"-test.main"""", """"--config.file=""""+promConfig, """"--storage.tsdb.path=""""+t.TempDir(), """"--web.listen-address=0.0.0.0""""+port) 	prom := exec.Command(promPath, """"-test.main"""", """"--config.file=""""+promConfig, """"--storage.tsdb.path=""""+t.TempDir(), """"--web.listen-address=0.0.0.0""""+port, """"--export.debug.disable-auth"""") 	err := prom.Start() 	require.NoError(t, err) ","cwe-20","https://github.com/GoogleCloudPlatform/prometheus/commit/b3958b8cadab94022ada3cf26565283d969b5478","cmd/prometheus/main_unix_test.go"
"train_sec","unknown","    {         IInteractiveAdapter interactiveAdapter;          /// <summary>         /// Checks if the current environment is a CI/CD environment where interactive tests should be skipped         /// </summary>         private static bool IsRunningInCICD()         {             // Check common CI/CD environment variables             return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(""""TF_BUILD"""")) ||           // Azure DevOps                    !string.IsNullOrEmpty(Environment.GetE","Write a secure cs function that fixes the vulnerability shown in src/UnitTest/TestInteractiveAdapter.cs (avoiding CWE-78)","    {         IInteractiveAdapter interactiveAdapter;          /// <summary>         /// Checks if the current environment is a CI/CD environment where interactive tests should be skipped         /// </summary>         private static bool IsRunningInCICD()         {             // Check common CI/CD environment variables             return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(""""TF_BUILD"""")) ||           // Azure DevOps                    !string.IsNullOrEmpty(Environment.GetE","    {         IInteractiveAdapter interactiveAdapter;          /// <summary>         /// Checks if the current environment is a CI/CD environment where interactive tests should be skipped         /// </summary>         private static bool IsRunningInCICD()         {             // Check common CI/CD environment variables             return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(""""TF_BUILD"""")) ||           // Azure DevOps                    !string.IsNullOrEmpty(Environment.GetE","cwe-78","https://github.com/microsoft/ProtocolTestFramework/commit/a7527b7009ef5317a87a8e668619159390a20639","src/UnitTest/TestInteractiveAdapter.cs"
"train_sec","unknown","from datetime import datetime, timedelta from typing import Optional from jose import JWTError, jwt import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext from fastapi import Depends, HTTPException, status, Header from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials             return None         token_data = TokenData(username=username)         return token_data     except JWTError:     except InvalidTokenError:         return None  as","Write a secure py function that fixes the vulnerability shown in backend/app/auth.py (avoiding CWE-22)","from datetime import datetime, timedelta from typing import Optional from jose import JWTError, jwt import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext from fastapi import Depends, HTTPException, status, Header from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials             return None         token_data = TokenData(username=username)         return token_data     except JWTError:     except InvalidTokenError:         return None  as","from datetime import datetime, timedelta from typing import Optional from jose import JWTError, jwt import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext from fastapi import Depends, HTTPException, status, Header from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials             return None         token_data = TokenData(username=username)         return token_data     except JWTError:     except InvalidTokenError:         return None  as","cwe-22","https://github.com/kargig/divemap/commit/d14669191cb01f8899537484d210389c28a4ab62","backend/app/auth.py"
"train_sec","unknown","                """"summary_processing_time""""             ),             """"keywords_extracted"""": transcription_data.get(""""keywords"""") is not None,             """"keyword_count"""": len(transcription_data[""""keywords""""])             if transcription_data.get(""""keywords"""")             else 0,             """"keyword_count"""": (                 len(transcription_data[""""keywords""""])                 if transcription_data.get(""""keywords"""")                 else 0             ),             """"keyword_processing_","Write a secure py function that fixes the vulnerability shown in app/api/audio.py (avoiding CWE-78)","                """"summary_processing_time""""             ),             """"keywords_extracted"""": transcription_data.get(""""keywords"""") is not None,             """"keyword_count"""": len(transcription_data[""""keywords""""])             if transcription_data.get(""""keywords"""")             else 0,             """"keyword_count"""": (                 len(transcription_data[""""keywords""""])                 if transcription_data.get(""""keywords"""")                 else 0             ),             """"keyword_processing_","                """"summary_processing_time""""             ),             """"keywords_extracted"""": transcription_data.get(""""keywords"""") is not None,             """"keyword_count"""": len(transcription_data[""""keywords""""])             if transcription_data.get(""""keywords"""")             else 0,             """"keyword_count"""": (                 len(transcription_data[""""keywords""""])                 if transcription_data.get(""""keywords"""")                 else 0             ),             """"keyword_processing_","cwe-78","https://github.com/strouddm/dialtone/commit/79d1c54df67111d09271d21ede0c2cc4c857a9aa","app/api/audio.py"
"train_sec","unknown","        raise HTTPException(status_code=404, detail=f""""Session {session_id} not found"""")      return SuccessResponse(         message=f""""Session {session_id} deleted successfully"""", request_id=request_id         success=True,         message=f""""Session {session_id} deleted successfully"""",         request_id=request_id,     )  ","Write a secure py function that fixes the vulnerability shown in app/api/sessions.py (avoiding CWE-78)","        raise HTTPException(status_code=404, detail=f""""Session {session_id} not found"""")      return SuccessResponse(         message=f""""Session {session_id} deleted successfully"""", request_id=request_id         success=True,         message=f""""Session {session_id} deleted successfully"""",         request_id=request_id,     )  ","        raise HTTPException(status_code=404, detail=f""""Session {session_id} not found"""")      return SuccessResponse(         message=f""""Session {session_id} deleted successfully"""", request_id=request_id         success=True,         message=f""""Session {session_id} deleted successfully"""",         request_id=request_id,     )  ","cwe-78","https://github.com/strouddm/dialtone/commit/79d1c54df67111d09271d21ede0c2cc4c857a9aa","app/api/sessions.py"
"train_sec","unknown","""""""""""""Custom exception hierarchy for the voice notes application.""""""""""""  from typing import Any, Dict, Optional  ","Write a secure py function that fixes the vulnerability shown in app/core/exceptions.py (avoiding CWE-78)","""""""""""""Custom exception hierarchy for the voice notes application.""""""""""""  from typing import Any, Dict, Optional  ","""""""""""""Custom exception hierarchy for the voice notes application.""""""""""""  from typing import Any, Dict, Optional  ","cwe-78","https://github.com/strouddm/dialtone/commit/79d1c54df67111d09271d21ede0c2cc4c857a9aa","app/core/exceptions.py"
"train_sec","unknown","    Note that this only globs the top-level directory as there are currently     no relevant files within subdirectories.     """"""""""""     return (p for p in run_dir.glob(""""*"""") if p.name != """"hook-hotplug-cmd"""")     return run_dir.glob(""""*"""")   def _collect_logs_into_tmp_dir(","Write a secure py function that fixes the vulnerability shown in cloudinit/cmd/devel/logs.py","    Note that this only globs the top-level directory as there are currently     no relevant files within subdirectories.     """"""""""""     return (p for p in run_dir.glob(""""*"""") if p.name != """"hook-hotplug-cmd"""")     return run_dir.glob(""""*"""")   def _collect_logs_into_tmp_dir(","    Note that this only globs the top-level directory as there are currently     no relevant files within subdirectories.     """"""""""""     return (p for p in run_dir.glob(""""*"""") if p.name != """"hook-hotplug-cmd"""")     return run_dir.glob(""""*"""")   def _collect_logs_into_tmp_dir(","unknown","https://github.com/balabit-deps/balabit-os-9-cloud-init/commit/d1deb6996d2692c337bee199afe3ecc2952f6442","cloudinit/cmd/devel/logs.py"
"train_sec","unknown","# # This file is part of cloud-init. See LICENSE file for license information.  __VERSION__ = """"25.1.2"""" __VERSION__ = """"25.1.4"""" _PACKAGED_VERSION = """"@@PACKAGED_VERSION@@""""  FEATURES = [","Write a secure py function that fixes the vulnerability shown in cloudinit/version.py","# # This file is part of cloud-init. See LICENSE file for license information.  __VERSION__ = """"25.1.2"""" __VERSION__ = """"25.1.4"""" _PACKAGED_VERSION = """"@@PACKAGED_VERSION@@""""  FEATURES = [","# # This file is part of cloud-init. See LICENSE file for license information.  __VERSION__ = """"25.1.2"""" __VERSION__ = """"25.1.4"""" _PACKAGED_VERSION = """"@@PACKAGED_VERSION@@""""  FEATURES = [","unknown","https://github.com/balabit-deps/balabit-os-9-cloud-init/commit/d1deb6996d2692c337bee199afe3ecc2952f6442","cloudinit/version.py"
"train_sec","unknown","    TRIGGER_GA_LANGUAGE_UPDATE(USER),     UPLOAD_TRANSLATED_DOCUMENT_GA_SUMMARY_DOC(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_GA_SUMMARY_RESPONSE_DOC(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_JUDGE_DECISION(CAMUNDA);     UPLOAD_TRANSLATED_DOCUMENT_JUDGE_DECISION(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_HEARING_SCHEDULED(CAMUNDA);      private final UserType userType; ","Write a secure java function that fixes the vulnerability shown in src/main/java/uk/gov/hmcts/reform/civil/callback/CaseEvent.java","    TRIGGER_GA_LANGUAGE_UPDATE(USER),     UPLOAD_TRANSLATED_DOCUMENT_GA_SUMMARY_DOC(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_GA_SUMMARY_RESPONSE_DOC(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_JUDGE_DECISION(CAMUNDA);     UPLOAD_TRANSLATED_DOCUMENT_JUDGE_DECISION(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_HEARING_SCHEDULED(CAMUNDA);      private final UserType userType; ","    TRIGGER_GA_LANGUAGE_UPDATE(USER),     UPLOAD_TRANSLATED_DOCUMENT_GA_SUMMARY_DOC(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_GA_SUMMARY_RESPONSE_DOC(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_JUDGE_DECISION(CAMUNDA);     UPLOAD_TRANSLATED_DOCUMENT_JUDGE_DECISION(CAMUNDA),     UPLOAD_TRANSLATED_DOCUMENT_HEARING_SCHEDULED(CAMUNDA);      private final UserType userType; ","unknown","https://github.com/hmcts/civil-general-applications/commit/5afef626d90b27ec34c435b54632a3419060bdd3","src/main/java/uk/gov/hmcts/reform/civil/callback/CaseEvent.java"
"train_sec","unknown","    APPLICATION_SUMMARY_DOC,     RESPOND_TO_APPLICATION_SUMMARY_DOC,     WRITTEN_REPRESENTATION_ORDER_DOC,     HEARING_ORDER_DOC,     DIRECTIONS_ORDER_DOC,     GENERAL_ORDER_DOC,     HEARING_NOTICE_DOC,     HEARING_ORDER_DOC,     REQUEST_MORE_INFORMATION_ORDER_DOC,     DISMISSAL_ORDER_DOC }","Write a secure java function that fixes the vulnerability shown in src/main/java/uk/gov/hmcts/reform/civil/enums/welshenhancements/PreTranslationGaDocumentType.java","    APPLICATION_SUMMARY_DOC,     RESPOND_TO_APPLICATION_SUMMARY_DOC,     WRITTEN_REPRESENTATION_ORDER_DOC,     HEARING_ORDER_DOC,     DIRECTIONS_ORDER_DOC,     GENERAL_ORDER_DOC,     HEARING_NOTICE_DOC,     HEARING_ORDER_DOC,     REQUEST_MORE_INFORMATION_ORDER_DOC,     DISMISSAL_ORDER_DOC }","    APPLICATION_SUMMARY_DOC,     RESPOND_TO_APPLICATION_SUMMARY_DOC,     WRITTEN_REPRESENTATION_ORDER_DOC,     HEARING_ORDER_DOC,     DIRECTIONS_ORDER_DOC,     GENERAL_ORDER_DOC,     HEARING_NOTICE_DOC,     HEARING_ORDER_DOC,     REQUEST_MORE_INFORMATION_ORDER_DOC,     DISMISSAL_ORDER_DOC }","unknown","https://github.com/hmcts/civil-general-applications/commit/5afef626d90b27ec34c435b54632a3419060bdd3","src/main/java/uk/gov/hmcts/reform/civil/enums/welshenhancements/PreTranslationGaDocumentType.java"
"train_sec","unknown","            JsonObject jsonInOutputKey = jsonResponse.get(""""output"""").getAsJsonObject();             if (jsonInOutputKey.keySet().contains(""""data"""")) {               JsonArray jsonArrayInDataArrayKeyOuter = jsonInOutputKey.get(""""data"""").getAsJsonArray();               if (!jsonArrayInDataArrayKeyOuter.isEmpty()) {               if (jsonArrayInDataArrayKeyOuter.size() > 0) {                 JsonArray jsonArrayInDataArrayKeyInner =                     jsonArrayInDataArrayKeyOuter.get(0).getAsJsonA","Write a secure java function that fixes the vulnerability shown in community/detectors/gradio_cve_2024_1728/src/main/java/com/google/tsunami/plugins/detectors/cves/cve20241728/Cve20241728VulnDetector.java","            JsonObject jsonInOutputKey = jsonResponse.get(""""output"""").getAsJsonObject();             if (jsonInOutputKey.keySet().contains(""""data"""")) {               JsonArray jsonArrayInDataArrayKeyOuter = jsonInOutputKey.get(""""data"""").getAsJsonArray();               if (!jsonArrayInDataArrayKeyOuter.isEmpty()) {               if (jsonArrayInDataArrayKeyOuter.size() > 0) {                 JsonArray jsonArrayInDataArrayKeyInner =                     jsonArrayInDataArrayKeyOuter.get(0).getAsJsonA","            JsonObject jsonInOutputKey = jsonResponse.get(""""output"""").getAsJsonObject();             if (jsonInOutputKey.keySet().contains(""""data"""")) {               JsonArray jsonArrayInDataArrayKeyOuter = jsonInOutputKey.get(""""data"""").getAsJsonArray();               if (!jsonArrayInDataArrayKeyOuter.isEmpty()) {               if (jsonArrayInDataArrayKeyOuter.size() > 0) {                 JsonArray jsonArrayInDataArrayKeyInner =                     jsonArrayInDataArrayKeyOuter.get(0).getAsJsonA","unknown","https://github.com/google/tsunami-security-scanner-plugins/commit/1b9a5a683da1495338c1e49d4c75b768876991a8","community/detectors/gradio_cve_2024_1728/src/main/java/com/google/tsunami/plugins/detectors/cves/cve20241728/Cve20241728VulnDetector.java"
"train_sec","unknown","""""""""""""  import asyncio import logging import math from dataclasses import dataclass from datetime import datetime, timedelta from enum import Enum from typing import Any  logger = logging.getLogger(__name__) from app.utils.logging_config import get_logger logger = get_logger(__name__)   class AgingModel(Enum):","Write a secure py function that fixes the vulnerability shown in app/algorithms/memory_aging_algorithms.py","""""""""""""  import asyncio import logging import math from dataclasses import dataclass from datetime import datetime, timedelta from enum import Enum from typing import Any  logger = logging.getLogger(__name__) from app.utils.logging_config import get_logger logger = get_logger(__name__)   class AgingModel(Enum):","""""""""""""  import asyncio import logging import math from dataclasses import dataclass from datetime import datetime, timedelta from enum import Enum from typing import Any  logger = logging.getLogger(__name__) from app.utils.logging_config import get_logger logger = get_logger(__name__)   class AgingModel(Enum):","unknown","https://github.com/raold/second-brain/commit/b4183d046556243b6bf741de5f21b104604b94bf","app/algorithms/memory_aging_algorithms.py"
"train_sec","unknown","for middleware_class, middleware_kwargs in security_manager.get_security_middleware():     app.add_middleware(middleware_class, **middleware_kwargs)  # Add CORS middleware # Add CORS middleware with secure configuration allowed_origins = security_config.allowed_origins or [] if not allowed_origins:     # Default to localhost for development only     if Config.ENVIRONMENT == """"development"""":         allowed_origins = [""""http://localhost:3000"""", """"http://localhost:8000"""", """"http://127.0.0.1:8000""""","Write a secure py function that fixes the vulnerability shown in app/app.py","for middleware_class, middleware_kwargs in security_manager.get_security_middleware():     app.add_middleware(middleware_class, **middleware_kwargs)  # Add CORS middleware # Add CORS middleware with secure configuration allowed_origins = security_config.allowed_origins or [] if not allowed_origins:     # Default to localhost for development only     if Config.ENVIRONMENT == """"development"""":         allowed_origins = [""""http://localhost:3000"""", """"http://localhost:8000"""", """"http://127.0.0.1:8000""""","for middleware_class, middleware_kwargs in security_manager.get_security_middleware():     app.add_middleware(middleware_class, **middleware_kwargs)  # Add CORS middleware # Add CORS middleware with secure configuration allowed_origins = security_config.allowed_origins or [] if not allowed_origins:     # Default to localhost for development only     if Config.ENVIRONMENT == """"development"""":         allowed_origins = [""""http://localhost:3000"""", """"http://localhost:8000"""", """"http://127.0.0.1:8000""""","unknown","https://github.com/raold/second-brain/commit/b4183d046556243b6bf741de5f21b104604b94bf","app/app.py"
"train_sec","unknown","        except ImportError:             pytest.skip(""""utils.archive module not importable"""")      @patch(""""backend.utils.cv_parser.PyPDF2.PdfReader"""")     @patch(""""backend.utils.cv_parser.pypdf.PdfReader"""")     @patch(""""backend.utils.cv_parser.docx.Document"""")     def test_utils_cv_parser_comprehensive(self, mock_docx, mock_pdf):         """"""""""""Test utils/cv_parser.py - 12% coverage""""""""""""","Write a secure py function that fixes the vulnerability shown in backend/backup_tests/test_final_coverage_push.py","        except ImportError:             pytest.skip(""""utils.archive module not importable"""")      @patch(""""backend.utils.cv_parser.PyPDF2.PdfReader"""")     @patch(""""backend.utils.cv_parser.pypdf.PdfReader"""")     @patch(""""backend.utils.cv_parser.docx.Document"""")     def test_utils_cv_parser_comprehensive(self, mock_docx, mock_pdf):         """"""""""""Test utils/cv_parser.py - 12% coverage""""""""""""","        except ImportError:             pytest.skip(""""utils.archive module not importable"""")      @patch(""""backend.utils.cv_parser.PyPDF2.PdfReader"""")     @patch(""""backend.utils.cv_parser.pypdf.PdfReader"""")     @patch(""""backend.utils.cv_parser.docx.Document"""")     def test_utils_cv_parser_comprehensive(self, mock_docx, mock_pdf):         """"""""""""Test utils/cv_parser.py - 12% coverage""""""""""""","unknown","https://github.com/sarperhorata/remote-jobs-api/commit/b68b20d79514cf27034dc456ac29311b7c8040c2","backend/backup_tests/test_final_coverage_push.py"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/SekaiMoeStudio/android_kernel_test_6.1/commit/bbeea50eba0aea5f2a93853a07ace96f41225112","fs/smb/client/smb2ops.c"
"train_sec","unknown","import org.junit.jupiter.api.Test; import org.junit.jupiter.api.extension.ExtendWith; import org.mockito.Mock; import org.mockito.MockMakers; import org.mockito.MockedStatic; import org.mockito.Mockito; import org.mockito.junit.jupiter.MockitoExtension;     private static final String VALID_ENDPOINT = """"VALID.ENDPOINT"""";     private static final String INVALID_ENDPOINT = """"INVALID_ENDPOINT_"""";      @Mock     @Mock(mockMaker = MockMakers.INLINE)     private DnsAddressEndpointGroupBuilder dnsAddre","Write a secure java function that fixes the vulnerability shown in data-prepper-core/src/test/java/org/opensearch/dataprepper/core/peerforwarder/discovery/DnsPeerListProviderCreationTest.java","import org.junit.jupiter.api.Test; import org.junit.jupiter.api.extension.ExtendWith; import org.mockito.Mock; import org.mockito.MockMakers; import org.mockito.MockedStatic; import org.mockito.Mockito; import org.mockito.junit.jupiter.MockitoExtension;     private static final String VALID_ENDPOINT = """"VALID.ENDPOINT"""";     private static final String INVALID_ENDPOINT = """"INVALID_ENDPOINT_"""";      @Mock     @Mock(mockMaker = MockMakers.INLINE)     private DnsAddressEndpointGroupBuilder dnsAddre","import org.junit.jupiter.api.Test; import org.junit.jupiter.api.extension.ExtendWith; import org.mockito.Mock; import org.mockito.MockMakers; import org.mockito.MockedStatic; import org.mockito.Mockito; import org.mockito.junit.jupiter.MockitoExtension;     private static final String VALID_ENDPOINT = """"VALID.ENDPOINT"""";     private static final String INVALID_ENDPOINT = """"INVALID_ENDPOINT_"""";      @Mock     @Mock(mockMaker = MockMakers.INLINE)     private DnsAddressEndpointGroupBuilder dnsAddre","unknown","https://github.com/opensearch-project/data-prepper/commit/292a547f61a549a57f173d7c899f7ca697e7b5df","data-prepper-core/src/test/java/org/opensearch/dataprepper/core/peerforwarder/discovery/DnsPeerListProviderCreationTest.java"
"train_sec","unknown","        final String exceptionMessage = UUID.randomUUID().toString();         final BadRequestException badRequestExceptionWithMessage = new BadRequestException(exceptionMessage, new IOException());          final Status noMessageStatus = grpcRequestExceptionHandler.apply(requestContext, badRequestExceptionNoMessage, metadata);         final Status noMessageStatus = grpcRequestExceptionHandler.apply(requestContext, Status.INVALID_ARGUMENT, badRequestExceptionNoMessage, metadata);         assertT","Write a secure java function that fixes the vulnerability shown in data-prepper-plugins/armeria-common/src/test/java/org/opensearch/dataprepper/GrpcRequestExceptionHandlerTest.java","        final String exceptionMessage = UUID.randomUUID().toString();         final BadRequestException badRequestExceptionWithMessage = new BadRequestException(exceptionMessage, new IOException());          final Status noMessageStatus = grpcRequestExceptionHandler.apply(requestContext, badRequestExceptionNoMessage, metadata);         final Status noMessageStatus = grpcRequestExceptionHandler.apply(requestContext, Status.INVALID_ARGUMENT, badRequestExceptionNoMessage, metadata);         assertT","        final String exceptionMessage = UUID.randomUUID().toString();         final BadRequestException badRequestExceptionWithMessage = new BadRequestException(exceptionMessage, new IOException());          final Status noMessageStatus = grpcRequestExceptionHandler.apply(requestContext, badRequestExceptionNoMessage, metadata);         final Status noMessageStatus = grpcRequestExceptionHandler.apply(requestContext, Status.INVALID_ARGUMENT, badRequestExceptionNoMessage, metadata);         assertT","unknown","https://github.com/opensearch-project/data-prepper/commit/292a547f61a549a57f173d7c899f7ca697e7b5df","data-prepper-plugins/armeria-common/src/test/java/org/opensearch/dataprepper/GrpcRequestExceptionHandlerTest.java"
"train_sec","unknown","		paramsMap: paramsMap{""""string"""": """"my_value""""}, 		wanted:    """"?string"""", 	},  	{ 		q:      """"select 1-?0, 1.0-?1, 1.0-?2"""", 		params: params{int64(-1), float64(-1.5), math.Inf(-1)}, 		wanted: """"select 1- -1, 1.0- -1.5, 1.0-'-Infinity'"""", 	}, 	{ 		q:      """"select 1+?0, 1.0+?1"""", 		params: params{int64(-1), float64(-1.5)}, 		wanted: """"select 1+-1, 1.0+-1.5"""", 	}, 	{ 		q:      """"select 1-?0, ?1"""", 		params: params{int64(-1), """"foo\n;\nSELECT * FROM passwords;--""""}, 		// Without a space before t","Write a secure go function that fixes the vulnerability shown in orm/format_test.go","		paramsMap: paramsMap{""""string"""": """"my_value""""}, 		wanted:    """"?string"""", 	},  	{ 		q:      """"select 1-?0, 1.0-?1, 1.0-?2"""", 		params: params{int64(-1), float64(-1.5), math.Inf(-1)}, 		wanted: """"select 1- -1, 1.0- -1.5, 1.0-'-Infinity'"""", 	}, 	{ 		q:      """"select 1+?0, 1.0+?1"""", 		params: params{int64(-1), float64(-1.5)}, 		wanted: """"select 1+-1, 1.0+-1.5"""", 	}, 	{ 		q:      """"select 1-?0, ?1"""", 		params: params{int64(-1), """"foo\n;\nSELECT * FROM passwords;--""""}, 		// Without a space before t","		paramsMap: paramsMap{""""string"""": """"my_value""""}, 		wanted:    """"?string"""", 	},  	{ 		q:      """"select 1-?0, 1.0-?1, 1.0-?2"""", 		params: params{int64(-1), float64(-1.5), math.Inf(-1)}, 		wanted: """"select 1- -1, 1.0- -1.5, 1.0-'-Infinity'"""", 	}, 	{ 		q:      """"select 1+?0, 1.0+?1"""", 		params: params{int64(-1), float64(-1.5)}, 		wanted: """"select 1+-1, 1.0+-1.5"""", 	}, 	{ 		q:      """"select 1-?0, ?1"""", 		params: params{int64(-1), """"foo\n;\nSELECT * FROM passwords;--""""}, 		// Without a space before t","unknown","https://github.com/go-pg/pg/commit/eff50a43724e52347559687a6945c116afbb41c1","orm/format_test.go"
"train_sec","unknown","	case bool: 		return appendBool(b, v) 	case int32: 		return strconv.AppendInt(b, int64(v), 10) 		return appendInt(b, int64(v)) 	case int64: 		return strconv.AppendInt(b, v, 10) 		return appendInt(b, v) 	case int: 		return strconv.AppendInt(b, int64(v), 10) 		return appendInt(b, int64(v)) 	case float32: 		return appendFloat(b, float64(v), flags, 32) 	case float64: 	return append(dst, """"FALSE""""...) }  func appendInt(dst []byte, v int64) []byte { 	// To avoid accidental comments which can lead to S","Write a secure go function that fixes the vulnerability shown in types/append.go","	case bool: 		return appendBool(b, v) 	case int32: 		return strconv.AppendInt(b, int64(v), 10) 		return appendInt(b, int64(v)) 	case int64: 		return strconv.AppendInt(b, v, 10) 		return appendInt(b, v) 	case int: 		return strconv.AppendInt(b, int64(v), 10) 		return appendInt(b, int64(v)) 	case float32: 		return appendFloat(b, float64(v), flags, 32) 	case float64: 	return append(dst, """"FALSE""""...) }  func appendInt(dst []byte, v int64) []byte { 	// To avoid accidental comments which can lead to S","	case bool: 		return appendBool(b, v) 	case int32: 		return strconv.AppendInt(b, int64(v), 10) 		return appendInt(b, int64(v)) 	case int64: 		return strconv.AppendInt(b, v, 10) 		return appendInt(b, v) 	case int: 		return strconv.AppendInt(b, int64(v), 10) 		return appendInt(b, int64(v)) 	case float32: 		return appendFloat(b, float64(v), flags, 32) 	case float64: 	return append(dst, """"FALSE""""...) }  func appendInt(dst []byte, v int64) []byte { 	// To avoid accidental comments which can lead to S","unknown","https://github.com/go-pg/pg/commit/eff50a43724e52347559687a6945c116afbb41c1","types/append.go"
"train_sec","unknown"," var appenders []AppenderFunc  //nolint // nolint func init() { 	appenders = []AppenderFunc{ 		reflect.Bool:          appendBoolValue, }  func appendIntValue(b []byte, v reflect.Value, _ int) []byte { 	return strconv.AppendInt(b, v.Int(), 10) 	return appendInt(b, v.Int()) }  func appendUintValue(b []byte, v reflect.Value, _ int) []byte {","Write a secure go function that fixes the vulnerability shown in types/append_value.go"," var appenders []AppenderFunc  //nolint // nolint func init() { 	appenders = []AppenderFunc{ 		reflect.Bool:          appendBoolValue, }  func appendIntValue(b []byte, v reflect.Value, _ int) []byte { 	return strconv.AppendInt(b, v.Int(), 10) 	return appendInt(b, v.Int()) }  func appendUintValue(b []byte, v reflect.Value, _ int) []byte {"," var appenders []AppenderFunc  //nolint // nolint func init() { 	appenders = []AppenderFunc{ 		reflect.Bool:          appendBoolValue, }  func appendIntValue(b []byte, v reflect.Value, _ int) []byte { 	return strconv.AppendInt(b, v.Int(), 10) 	return appendInt(b, v.Int()) }  func appendUintValue(b []byte, v reflect.Value, _ int) []byte {","unknown","https://github.com/go-pg/pg/commit/eff50a43724e52347559687a6945c116afbb41c1","types/append_value.go"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/deepin-community/kernel/commit/d9a44dd97443bfe6aada4f94bec7654a58fa0769","fs/smb/client/smb2ops.c"
"train_sec","unknown","	msleep(125); 	if (cifs_rdma_enabled(server)) 		smbd_destroy(server);  	if (server->ssocket) { 		sock_release(server->ssocket); 		server->ssocket = NULL;  		/* Release netns reference for the socket. */ 		put_net(cifs_net_ns(server)); 	}  	if (!list_empty(&server->pending_mid_q)) { 		 */ 	}  	/* Release netns reference for this server. */ 	put_net(cifs_net_ns(server)); 	kfree(server->leaf_fullpath); 	kfree(server->hostname);  	tcp_ses->ops = ctx->ops; 	tcp_ses->vals = ctx->vals;  	/* Grab netns ","Write a secure c function that fixes the vulnerability shown in fs/smb/client/connect.c","	msleep(125); 	if (cifs_rdma_enabled(server)) 		smbd_destroy(server);  	if (server->ssocket) { 		sock_release(server->ssocket); 		server->ssocket = NULL;  		/* Release netns reference for the socket. */ 		put_net(cifs_net_ns(server)); 	}  	if (!list_empty(&server->pending_mid_q)) { 		 */ 	}  	/* Release netns reference for this server. */ 	put_net(cifs_net_ns(server)); 	kfree(server->leaf_fullpath); 	kfree(server->hostname);  	tcp_ses->ops = ctx->ops; 	tcp_ses->vals = ctx->vals;  	/* Grab netns ","	msleep(125); 	if (cifs_rdma_enabled(server)) 		smbd_destroy(server);  	if (server->ssocket) { 		sock_release(server->ssocket); 		server->ssocket = NULL;  		/* Release netns reference for the socket. */ 		put_net(cifs_net_ns(server)); 	}  	if (!list_empty(&server->pending_mid_q)) { 		 */ 	}  	/* Release netns reference for this server. */ 	put_net(cifs_net_ns(server)); 	kfree(server->leaf_fullpath); 	kfree(server->hostname);  	tcp_ses->ops = ctx->ops; 	tcp_ses->vals = ctx->vals;  	/* Grab netns ","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/76a2d85d2711858dd547c1ac23437a4a7f374550","fs/smb/client/connect.c"
"train_sec","unknown","			 server->ssocket->flags); 		sock_release(server->ssocket); 		server->ssocket = NULL; 		put_net(cifs_net_ns(server)); 	} 	server->sequence_number = 0; 	server->session_estab = false; 		/* 		 * Grab netns reference for the socket. 		 * 		 * This reference will be released in several situations: 		 * - In the failure path before the cifsd thread is started. 		 * - In the all place where server->socket is released, it is 		 *   also set to NULL. 		 * - Ultimately in clean_demultiplex_info(), duri","Write a secure c function that fixes the vulnerability shown in fs/smb/client/connect.c","			 server->ssocket->flags); 		sock_release(server->ssocket); 		server->ssocket = NULL; 		put_net(cifs_net_ns(server)); 	} 	server->sequence_number = 0; 	server->session_estab = false; 		/* 		 * Grab netns reference for the socket. 		 * 		 * This reference will be released in several situations: 		 * - In the failure path before the cifsd thread is started. 		 * - In the all place where server->socket is released, it is 		 *   also set to NULL. 		 * - Ultimately in clean_demultiplex_info(), duri","			 server->ssocket->flags); 		sock_release(server->ssocket); 		server->ssocket = NULL; 		put_net(cifs_net_ns(server)); 	} 	server->sequence_number = 0; 	server->session_estab = false; 		/* 		 * Grab netns reference for the socket. 		 * 		 * This reference will be released in several situations: 		 * - In the failure path before the cifsd thread is started. 		 * - In the all place where server->socket is released, it is 		 *   also set to NULL. 		 * - Ultimately in clean_demultiplex_info(), duri","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/20addb96ce73b787e9e72115a628429178dd7676","fs/smb/client/connect.c"
"train_sec","unknown","static int xennet_close(struct net_device *dev) { 	struct netfront_info *np = netdev_priv(dev); 	unsigned int num_queues = dev->real_num_tx_queues; 	unsigned int num_queues = np->queues ? dev->real_num_tx_queues : 0; 	unsigned int i; 	struct netfront_queue *queue; 	netif_tx_stop_all_queues(np->netdev); { 	unsigned int i;  	if (!info->queues) 		return;  	for (i = 0; i < info->netdev->real_num_tx_queues; i++) { 		struct netfront_queue *queue = &info->queues[i]; ","Write a secure c function that fixes the vulnerability shown in drivers/net/xen-netfront.c","static int xennet_close(struct net_device *dev) { 	struct netfront_info *np = netdev_priv(dev); 	unsigned int num_queues = dev->real_num_tx_queues; 	unsigned int num_queues = np->queues ? dev->real_num_tx_queues : 0; 	unsigned int i; 	struct netfront_queue *queue; 	netif_tx_stop_all_queues(np->netdev); { 	unsigned int i;  	if (!info->queues) 		return;  	for (i = 0; i < info->netdev->real_num_tx_queues; i++) { 		struct netfront_queue *queue = &info->queues[i]; ","static int xennet_close(struct net_device *dev) { 	struct netfront_info *np = netdev_priv(dev); 	unsigned int num_queues = dev->real_num_tx_queues; 	unsigned int num_queues = np->queues ? dev->real_num_tx_queues : 0; 	unsigned int i; 	struct netfront_queue *queue; 	netif_tx_stop_all_queues(np->netdev); { 	unsigned int i;  	if (!info->queues) 		return;  	for (i = 0; i < info->netdev->real_num_tx_queues; i++) { 		struct netfront_queue *queue = &info->queues[i]; ","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/7c24f3e4cd0dbae181d8be92146a9999cf8b6ade","drivers/net/xen-netfront.c"
"train_sec","unknown","	// be a valid candidate for SubVP (i.e. has a plane, stream, doesn't 	// already have phantom pipe assigned, etc.) by previous checks. 	phantom_stream = dcn32_enable_phantom_stream(dc, context, pipes, pipe_cnt, index); 	if (!phantom_stream) 		return;  	dcn32_enable_phantom_plane(dc, context, phantom_stream, index);  	for (i = 0; i < dc->res_pool->pipe_count; i++) {","Write a secure c function that fixes the vulnerability shown in drivers/gpu/drm/amd/display/dc/dcn32/dcn32_resource.c","	// be a valid candidate for SubVP (i.e. has a plane, stream, doesn't 	// already have phantom pipe assigned, etc.) by previous checks. 	phantom_stream = dcn32_enable_phantom_stream(dc, context, pipes, pipe_cnt, index); 	if (!phantom_stream) 		return;  	dcn32_enable_phantom_plane(dc, context, phantom_stream, index);  	for (i = 0; i < dc->res_pool->pipe_count; i++) {","	// be a valid candidate for SubVP (i.e. has a plane, stream, doesn't 	// already have phantom pipe assigned, etc.) by previous checks. 	phantom_stream = dcn32_enable_phantom_stream(dc, context, pipes, pipe_cnt, index); 	if (!phantom_stream) 		return;  	dcn32_enable_phantom_plane(dc, context, phantom_stream, index);  	for (i = 0; i < dc->res_pool->pipe_count; i++) {","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/ed84508d6f57664a952805ed38daed78622b38a6","drivers/gpu/drm/amd/display/dc/dcn32/dcn32_resource.c"
"train_sec","unknown","	    (pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.bits.hdr_mult)) 		hws->funcs.set_hdr_multiplier(pipe_ctx);  	if (pipe_ctx->update_flags.bits.enable || 	    (pipe_ctx->plane_state && 	if ((pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.bits.hdr_mult) || 	    pipe_ctx->update_flags.bits.enable) 		hws->funcs.set_hdr_multiplier(pipe_ctx);  	if ((pipe_ctx->plane_state && 	     pipe_ctx->plane_state->update_flags.bits.in_transfer_func_change) || 	    (pipe_ctx->plane_s","Write a secure c function that fixes the vulnerability shown in drivers/gpu/drm/amd/display/dc/dcn20/dcn20_hwseq.c (avoiding CWE-476)","	    (pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.bits.hdr_mult)) 		hws->funcs.set_hdr_multiplier(pipe_ctx);  	if (pipe_ctx->update_flags.bits.enable || 	    (pipe_ctx->plane_state && 	if ((pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.bits.hdr_mult) || 	    pipe_ctx->update_flags.bits.enable) 		hws->funcs.set_hdr_multiplier(pipe_ctx);  	if ((pipe_ctx->plane_state && 	     pipe_ctx->plane_state->update_flags.bits.in_transfer_func_change) || 	    (pipe_ctx->plane_s","	    (pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.bits.hdr_mult)) 		hws->funcs.set_hdr_multiplier(pipe_ctx);  	if (pipe_ctx->update_flags.bits.enable || 	    (pipe_ctx->plane_state && 	if ((pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.bits.hdr_mult) || 	    pipe_ctx->update_flags.bits.enable) 		hws->funcs.set_hdr_multiplier(pipe_ctx);  	if ((pipe_ctx->plane_state && 	     pipe_ctx->plane_state->update_flags.bits.in_transfer_func_change) || 	    (pipe_ctx->plane_s","cwe-476","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/102a884bf48dd18ba185386a5d47bb4372d1f478","drivers/gpu/drm/amd/display/dc/dcn20/dcn20_hwseq.c"
"train_sec","unknown","	int edp_num; 	uint32_t backlight = MAX_BACKLIGHT_LEVEL;  	if (dc->clk_mgr && dc->clk_mgr->funcs->init_clocks) 	if (dc->clk_mgr && dc->clk_mgr->funcs && dc->clk_mgr->funcs->init_clocks) 		dc->clk_mgr->funcs->init_clocks(dc->clk_mgr);  	// Initialize the dccg 	if (!dcb->funcs->is_accelerated_mode(dcb) && dc->res_pool->hubbub->funcs->init_watermarks) 		dc->res_pool->hubbub->funcs->init_watermarks(dc->res_pool->hubbub);  	if (dc->clk_mgr->funcs->notify_wm_ranges) 	if (dc->clk_mgr && dc->clk_mgr->fu","Write a secure c function that fixes the vulnerability shown in drivers/gpu/drm/amd/display/dc/dcn32/dcn32_hwseq.c (avoiding CWE-22)","	int edp_num; 	uint32_t backlight = MAX_BACKLIGHT_LEVEL;  	if (dc->clk_mgr && dc->clk_mgr->funcs->init_clocks) 	if (dc->clk_mgr && dc->clk_mgr->funcs && dc->clk_mgr->funcs->init_clocks) 		dc->clk_mgr->funcs->init_clocks(dc->clk_mgr);  	// Initialize the dccg 	if (!dcb->funcs->is_accelerated_mode(dcb) && dc->res_pool->hubbub->funcs->init_watermarks) 		dc->res_pool->hubbub->funcs->init_watermarks(dc->res_pool->hubbub);  	if (dc->clk_mgr->funcs->notify_wm_ranges) 	if (dc->clk_mgr && dc->clk_mgr->fu","	int edp_num; 	uint32_t backlight = MAX_BACKLIGHT_LEVEL;  	if (dc->clk_mgr && dc->clk_mgr->funcs->init_clocks) 	if (dc->clk_mgr && dc->clk_mgr->funcs && dc->clk_mgr->funcs->init_clocks) 		dc->clk_mgr->funcs->init_clocks(dc->clk_mgr);  	// Initialize the dccg 	if (!dcb->funcs->is_accelerated_mode(dcb) && dc->res_pool->hubbub->funcs->init_watermarks) 		dc->res_pool->hubbub->funcs->init_watermarks(dc->res_pool->hubbub);  	if (dc->clk_mgr->funcs->notify_wm_ranges) 	if (dc->clk_mgr && dc->clk_mgr->fu","cwe-22","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/2da810f879ab09cda14b8fe61bedc23b2cf4441c","drivers/gpu/drm/amd/display/dc/dcn32/dcn32_hwseq.c"
"train_sec","unknown","	int edp_num; 	uint32_t backlight = MAX_BACKLIGHT_LEVEL;  	if (dc->clk_mgr && dc->clk_mgr->funcs->init_clocks) 	if (dc->clk_mgr && dc->clk_mgr->funcs && dc->clk_mgr->funcs->init_clocks) 		dc->clk_mgr->funcs->init_clocks(dc->clk_mgr);  	// Initialize the dccg 	if (!dcb->funcs->is_accelerated_mode(dcb) && dc->res_pool->hubbub->funcs->init_watermarks) 		dc->res_pool->hubbub->funcs->init_watermarks(dc->res_pool->hubbub);  	if (dc->clk_mgr->funcs->notify_wm_ranges) 	if (dc->clk_mgr && dc->clk_mgr->fu","Write a secure c function that fixes the vulnerability shown in drivers/gpu/drm/amd/display/dc/dcn30/dcn30_hwseq.c (avoiding CWE-22)","	int edp_num; 	uint32_t backlight = MAX_BACKLIGHT_LEVEL;  	if (dc->clk_mgr && dc->clk_mgr->funcs->init_clocks) 	if (dc->clk_mgr && dc->clk_mgr->funcs && dc->clk_mgr->funcs->init_clocks) 		dc->clk_mgr->funcs->init_clocks(dc->clk_mgr);  	// Initialize the dccg 	if (!dcb->funcs->is_accelerated_mode(dcb) && dc->res_pool->hubbub->funcs->init_watermarks) 		dc->res_pool->hubbub->funcs->init_watermarks(dc->res_pool->hubbub);  	if (dc->clk_mgr->funcs->notify_wm_ranges) 	if (dc->clk_mgr && dc->clk_mgr->fu","	int edp_num; 	uint32_t backlight = MAX_BACKLIGHT_LEVEL;  	if (dc->clk_mgr && dc->clk_mgr->funcs->init_clocks) 	if (dc->clk_mgr && dc->clk_mgr->funcs && dc->clk_mgr->funcs->init_clocks) 		dc->clk_mgr->funcs->init_clocks(dc->clk_mgr);  	// Initialize the dccg 	if (!dcb->funcs->is_accelerated_mode(dcb) && dc->res_pool->hubbub->funcs->init_watermarks) 		dc->res_pool->hubbub->funcs->init_watermarks(dc->res_pool->hubbub);  	if (dc->clk_mgr->funcs->notify_wm_ranges) 	if (dc->clk_mgr && dc->clk_mgr->fu","cwe-22","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/1a5d73ac5a150ff87cee76f88f36f1eda1ca143d","drivers/gpu/drm/amd/display/dc/dcn30/dcn30_hwseq.c"
"train_sec","unknown","{ 	int r = flags & CLOSURE_REMAINING_MASK;  	BUG_ON(flags & CLOSURE_GUARD_MASK); 	BUG_ON(!r && (flags & ~CLOSURE_DESTRUCTOR)); 	if (WARN(flags & CLOSURE_GUARD_MASK, 		 """"closure has guard bits set: %x (%u)"""", 		 flags & CLOSURE_GUARD_MASK, (unsigned) __fls(r))) 		r &= ~CLOSURE_GUARD_MASK;  	if (!r) { 		WARN(flags & ~CLOSURE_DESTRUCTOR, 		     """"closure ref hit 0 with incorrect flags set: %x (%u)"""", 		     flags & ~CLOSURE_DESTRUCTOR, (unsigned) __fls(flags));  		if (cl->fn && !(flags & CLOSURE_D","Write a secure c function that fixes the vulnerability shown in drivers/md/bcache/closure.c","{ 	int r = flags & CLOSURE_REMAINING_MASK;  	BUG_ON(flags & CLOSURE_GUARD_MASK); 	BUG_ON(!r && (flags & ~CLOSURE_DESTRUCTOR)); 	if (WARN(flags & CLOSURE_GUARD_MASK, 		 """"closure has guard bits set: %x (%u)"""", 		 flags & CLOSURE_GUARD_MASK, (unsigned) __fls(r))) 		r &= ~CLOSURE_GUARD_MASK;  	if (!r) { 		WARN(flags & ~CLOSURE_DESTRUCTOR, 		     """"closure ref hit 0 with incorrect flags set: %x (%u)"""", 		     flags & ~CLOSURE_DESTRUCTOR, (unsigned) __fls(flags));  		if (cl->fn && !(flags & CLOSURE_D","{ 	int r = flags & CLOSURE_REMAINING_MASK;  	BUG_ON(flags & CLOSURE_GUARD_MASK); 	BUG_ON(!r && (flags & ~CLOSURE_DESTRUCTOR)); 	if (WARN(flags & CLOSURE_GUARD_MASK, 		 """"closure has guard bits set: %x (%u)"""", 		 flags & CLOSURE_GUARD_MASK, (unsigned) __fls(r))) 		r &= ~CLOSURE_GUARD_MASK;  	if (!r) { 		WARN(flags & ~CLOSURE_DESTRUCTOR, 		     """"closure ref hit 0 with incorrect flags set: %x (%u)"""", 		     flags & ~CLOSURE_DESTRUCTOR, (unsigned) __fls(flags));  		if (cl->fn && !(flags & CLOSURE_D","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/b40aac890296af3fc8219aab8cf698a0017ef710","drivers/md/bcache/closure.c"
"train_sec","unknown","		dc->res_pool->hubbub->funcs->program_det_size( 			dc->res_pool->hubbub, pipe_ctx->plane_res.hubp->inst, pipe_ctx->det_buffer_size_kb);  	if (pipe_ctx->update_flags.raw || pipe_ctx->plane_state->update_flags.raw || pipe_ctx->stream->update_flags.raw) 	if (pipe_ctx->update_flags.raw || 	    (pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.raw) || 	    pipe_ctx->stream->update_flags.raw) 		dcn20_update_dchubp_dpp(dc, pipe_ctx, context);  	if (pipe_ctx->update_flags.bits.enable 			|| ","Write a secure c function that fixes the vulnerability shown in drivers/gpu/drm/amd/display/dc/dcn20/dcn20_hwseq.c (avoiding CWE-22)","		dc->res_pool->hubbub->funcs->program_det_size( 			dc->res_pool->hubbub, pipe_ctx->plane_res.hubp->inst, pipe_ctx->det_buffer_size_kb);  	if (pipe_ctx->update_flags.raw || pipe_ctx->plane_state->update_flags.raw || pipe_ctx->stream->update_flags.raw) 	if (pipe_ctx->update_flags.raw || 	    (pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.raw) || 	    pipe_ctx->stream->update_flags.raw) 		dcn20_update_dchubp_dpp(dc, pipe_ctx, context);  	if (pipe_ctx->update_flags.bits.enable 			|| ","		dc->res_pool->hubbub->funcs->program_det_size( 			dc->res_pool->hubbub, pipe_ctx->plane_res.hubp->inst, pipe_ctx->det_buffer_size_kb);  	if (pipe_ctx->update_flags.raw || pipe_ctx->plane_state->update_flags.raw || pipe_ctx->stream->update_flags.raw) 	if (pipe_ctx->update_flags.raw || 	    (pipe_ctx->plane_state && pipe_ctx->plane_state->update_flags.raw) || 	    pipe_ctx->stream->update_flags.raw) 		dcn20_update_dchubp_dpp(dc, pipe_ctx, context);  	if (pipe_ctx->update_flags.bits.enable 			|| ","cwe-22","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/bef905678ff887177c569c7c692980ca4e965e50","drivers/gpu/drm/amd/display/dc/dcn20/dcn20_hwseq.c"
"train_sec","unknown","			 ndlp->nlp_state, ndlp->fc4_xpt_flags);  	/* Don't schedule a worker thread event if the vport is going down. */ 	if (vport->load_flag & FC_UNLOADING) { 	if ((vport->load_flag & FC_UNLOADING) || 	    !(phba->hba_flag & HBA_SETUP)) { 		spin_lock_irqsave(&ndlp->lock, iflags); 		ndlp->rport = NULL; ","Write a secure c function that fixes the vulnerability shown in drivers/scsi/lpfc/lpfc_hbadisc.c","			 ndlp->nlp_state, ndlp->fc4_xpt_flags);  	/* Don't schedule a worker thread event if the vport is going down. */ 	if (vport->load_flag & FC_UNLOADING) { 	if ((vport->load_flag & FC_UNLOADING) || 	    !(phba->hba_flag & HBA_SETUP)) { 		spin_lock_irqsave(&ndlp->lock, iflags); 		ndlp->rport = NULL; ","			 ndlp->nlp_state, ndlp->fc4_xpt_flags);  	/* Don't schedule a worker thread event if the vport is going down. */ 	if (vport->load_flag & FC_UNLOADING) { 	if ((vport->load_flag & FC_UNLOADING) || 	    !(phba->hba_flag & HBA_SETUP)) { 		spin_lock_irqsave(&ndlp->lock, iflags); 		ndlp->rport = NULL; ","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/71fb5a3e43a07c18974a9dd4482423141006cd63","drivers/scsi/lpfc/lpfc_hbadisc.c"
"train_sec","unknown"," 	iocb = &lpfc_cmd->cur_iocbq; 	if (phba->sli_rev == LPFC_SLI_REV4) { 		pring_s4 = phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq->pring; 		if (!pring_s4) { 		/* if the io_wq & pring are gone, the port was reset. */ 		if (!phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq || 		    !phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq->pring) { 			lpfc_printf_vlog(vport, KERN_WARNING, LOG_FCP, 					 """"2877 SCSI Layer I/O Abort Request """" 					 """"IO CMPL Status x%x ID %d LUN %llu """" 					 """"HBA_SETUP %d\n"""", FAILED, 	","Write a secure c function that fixes the vulnerability shown in drivers/scsi/lpfc/lpfc_scsi.c"," 	iocb = &lpfc_cmd->cur_iocbq; 	if (phba->sli_rev == LPFC_SLI_REV4) { 		pring_s4 = phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq->pring; 		if (!pring_s4) { 		/* if the io_wq & pring are gone, the port was reset. */ 		if (!phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq || 		    !phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq->pring) { 			lpfc_printf_vlog(vport, KERN_WARNING, LOG_FCP, 					 """"2877 SCSI Layer I/O Abort Request """" 					 """"IO CMPL Status x%x ID %d LUN %llu """" 					 """"HBA_SETUP %d\n"""", FAILED, 	"," 	iocb = &lpfc_cmd->cur_iocbq; 	if (phba->sli_rev == LPFC_SLI_REV4) { 		pring_s4 = phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq->pring; 		if (!pring_s4) { 		/* if the io_wq & pring are gone, the port was reset. */ 		if (!phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq || 		    !phba->sli4_hba.hdwq[iocb->hba_wqidx].io_wq->pring) { 			lpfc_printf_vlog(vport, KERN_WARNING, LOG_FCP, 					 """"2877 SCSI Layer I/O Abort Request """" 					 """"IO CMPL Status x%x ID %d LUN %llu """" 					 """"HBA_SETUP %d\n"""", FAILED, 	","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/71fb5a3e43a07c18974a9dd4482423141006cd63","drivers/scsi/lpfc/lpfc_scsi.c"
"train_sec","unknown","	/* Look on all the FCP Rings for the iotag */ 	if (phba->sli_rev >= LPFC_SLI_REV4) { 		for (i = 0; i < phba->cfg_hdw_queue; i++) { 			if (!phba->sli4_hba.hdwq || 			    !phba->sli4_hba.hdwq[i].io_wq) { 				lpfc_printf_log(phba, KERN_ERR, LOG_SLI, 						""""7777 hdwq's deleted %lx """" 						""""%lx %x %x\n"""", 						(unsigned long)phba->pport->load_flag, 						(unsigned long)phba->hba_flag, 						phba->link_state, 						phba->sli.sli_flag); 				return; 			} 			pring = phba->sli4_hba.hdwq[i].io_wq->pri","Write a secure c function that fixes the vulnerability shown in drivers/scsi/lpfc/lpfc_sli.c","	/* Look on all the FCP Rings for the iotag */ 	if (phba->sli_rev >= LPFC_SLI_REV4) { 		for (i = 0; i < phba->cfg_hdw_queue; i++) { 			if (!phba->sli4_hba.hdwq || 			    !phba->sli4_hba.hdwq[i].io_wq) { 				lpfc_printf_log(phba, KERN_ERR, LOG_SLI, 						""""7777 hdwq's deleted %lx """" 						""""%lx %x %x\n"""", 						(unsigned long)phba->pport->load_flag, 						(unsigned long)phba->hba_flag, 						phba->link_state, 						phba->sli.sli_flag); 				return; 			} 			pring = phba->sli4_hba.hdwq[i].io_wq->pri","	/* Look on all the FCP Rings for the iotag */ 	if (phba->sli_rev >= LPFC_SLI_REV4) { 		for (i = 0; i < phba->cfg_hdw_queue; i++) { 			if (!phba->sli4_hba.hdwq || 			    !phba->sli4_hba.hdwq[i].io_wq) { 				lpfc_printf_log(phba, KERN_ERR, LOG_SLI, 						""""7777 hdwq's deleted %lx """" 						""""%lx %x %x\n"""", 						(unsigned long)phba->pport->load_flag, 						(unsigned long)phba->hba_flag, 						phba->link_state, 						phba->sli.sli_flag); 				return; 			} 			pring = phba->sli4_hba.hdwq[i].io_wq->pri","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/71fb5a3e43a07c18974a9dd4482423141006cd63","drivers/scsi/lpfc/lpfc_sli.c"
"train_sec","unknown"," static unsigned int get_bytes_per_element(enum source_format_class source_format, bool is_chroma) { 	unsigned int ret_val = 0; 	unsigned int ret_val = 1;  	if (source_format == dm_444_16) { 		if (!is_chroma)","Write a secure c function that fixes the vulnerability shown in drivers/gpu/drm/amd/display/dc/dml/dcn20/display_rq_dlg_calc_20.c"," static unsigned int get_bytes_per_element(enum source_format_class source_format, bool is_chroma) { 	unsigned int ret_val = 0; 	unsigned int ret_val = 1;  	if (source_format == dm_444_16) { 		if (!is_chroma)"," static unsigned int get_bytes_per_element(enum source_format_class source_format, bool is_chroma) { 	unsigned int ret_val = 0; 	unsigned int ret_val = 1;  	if (source_format == dm_444_16) { 		if (!is_chroma)","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/45c7a254c6abb3316fe59d2fb38f031b530a937c","drivers/gpu/drm/amd/display/dc/dml/dcn20/display_rq_dlg_calc_20.c"
"train_sec","unknown"," static unsigned int get_bytes_per_element(enum source_format_class source_format, bool is_chroma) { 	unsigned int ret_val = 0; 	unsigned int ret_val = 1;  	if (source_format == dm_444_16) { 		if (!is_chroma)","Write a secure c function that fixes the vulnerability shown in drivers/gpu/drm/amd/display/dc/dml/dml1_display_rq_dlg_calc.c"," static unsigned int get_bytes_per_element(enum source_format_class source_format, bool is_chroma) { 	unsigned int ret_val = 0; 	unsigned int ret_val = 1;  	if (source_format == dm_444_16) { 		if (!is_chroma)"," static unsigned int get_bytes_per_element(enum source_format_class source_format, bool is_chroma) { 	unsigned int ret_val = 0; 	unsigned int ret_val = 1;  	if (source_format == dm_444_16) { 		if (!is_chroma)","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/45c7a254c6abb3316fe59d2fb38f031b530a937c","drivers/gpu/drm/amd/display/dc/dml/dml1_display_rq_dlg_calc.c"
"train_sec","unknown","	struct hlist_node *dentry_first; 	struct dentry *dentry_ptr; 	struct dentry dentry; 	char fname[64] = {}; 	unsigned long ino;  	/* 		return; 	}  	if (strncpy_from_kernel_nofault(fname, dentry.d_name.name, 63) < 0) 		strscpy(fname, """"<invalid>"""", 63); 	/* 	 * if dentry is corrupted, the %pd handler may still crash, 	 * but it's unlikely that we reach here with a corrupt mapping 	 * Even if strncpy_from_kernel_nofault() succeeded, 	 * the fname could be unreliable 	 */ 	pr_warn(""""aops:%ps ino:%lx","Write a secure c function that fixes the vulnerability shown in fs/inode.c","	struct hlist_node *dentry_first; 	struct dentry *dentry_ptr; 	struct dentry dentry; 	char fname[64] = {}; 	unsigned long ino;  	/* 		return; 	}  	if (strncpy_from_kernel_nofault(fname, dentry.d_name.name, 63) < 0) 		strscpy(fname, """"<invalid>"""", 63); 	/* 	 * if dentry is corrupted, the %pd handler may still crash, 	 * but it's unlikely that we reach here with a corrupt mapping 	 * Even if strncpy_from_kernel_nofault() succeeded, 	 * the fname could be unreliable 	 */ 	pr_warn(""""aops:%ps ino:%lx","	struct hlist_node *dentry_first; 	struct dentry *dentry_ptr; 	struct dentry dentry; 	char fname[64] = {}; 	unsigned long ino;  	/* 		return; 	}  	if (strncpy_from_kernel_nofault(fname, dentry.d_name.name, 63) < 0) 		strscpy(fname, """"<invalid>"""", 63); 	/* 	 * if dentry is corrupted, the %pd handler may still crash, 	 * but it's unlikely that we reach here with a corrupt mapping 	 * Even if strncpy_from_kernel_nofault() succeeded, 	 * the fname could be unreliable 	 */ 	pr_warn(""""aops:%ps ino:%lx","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/d0491f7f5e0fb60b44badd1bd4f1609762e36974","fs/inode.c"
"train_sec","unknown","		rc = cca_clr2seckey(kcs.cardnr, kcs.domain, kcs.keytype, 				    kcs.clrkey.clrkey, kcs.seckey.seckey); 		DEBUG_DBG(""""%s cca_clr2seckey()=%d\n"""", __func__, rc); 		if (rc) 			break; 		if (copy_to_user(ucs, &kcs, sizeof(kcs))) 		if (!rc && copy_to_user(ucs, &kcs, sizeof(kcs))) 			rc = -EFAULT; 		memzero_explicit(&kcs, sizeof(kcs)); 		break; 				      kcp.protkey.protkey, 				      &kcp.protkey.len, &kcp.protkey.type); 		DEBUG_DBG(""""%s pkey_clr2protkey()=%d\n"""", __func__, rc); 		if (rc) 			break;","Write a secure c function that fixes the vulnerability shown in drivers/s390/crypto/pkey_api.c (avoiding CWE-200)","		rc = cca_clr2seckey(kcs.cardnr, kcs.domain, kcs.keytype, 				    kcs.clrkey.clrkey, kcs.seckey.seckey); 		DEBUG_DBG(""""%s cca_clr2seckey()=%d\n"""", __func__, rc); 		if (rc) 			break; 		if (copy_to_user(ucs, &kcs, sizeof(kcs))) 		if (!rc && copy_to_user(ucs, &kcs, sizeof(kcs))) 			rc = -EFAULT; 		memzero_explicit(&kcs, sizeof(kcs)); 		break; 				      kcp.protkey.protkey, 				      &kcp.protkey.len, &kcp.protkey.type); 		DEBUG_DBG(""""%s pkey_clr2protkey()=%d\n"""", __func__, rc); 		if (rc) 			break;","		rc = cca_clr2seckey(kcs.cardnr, kcs.domain, kcs.keytype, 				    kcs.clrkey.clrkey, kcs.seckey.seckey); 		DEBUG_DBG(""""%s cca_clr2seckey()=%d\n"""", __func__, rc); 		if (rc) 			break; 		if (copy_to_user(ucs, &kcs, sizeof(kcs))) 		if (!rc && copy_to_user(ucs, &kcs, sizeof(kcs))) 			rc = -EFAULT; 		memzero_explicit(&kcs, sizeof(kcs)); 		break; 				      kcp.protkey.protkey, 				      &kcp.protkey.len, &kcp.protkey.type); 		DEBUG_DBG(""""%s pkey_clr2protkey()=%d\n"""", __func__, rc); 		if (rc) 			break;","cwe-200","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/d1e23cb0b6528318f764bbc9f261b1c0fe4a0acd","drivers/s390/crypto/pkey_api.c"
"train_sec","unknown","	__u8			*rx_buf; 	__u8			*tx_buf; 	struct completion	complete; 	unsigned long		rate_per; 	unsigned int		msglen; 	unsigned int		delivered; 	unsigned int		block_data;  	lpi2c_imx_set_mode(lpi2c_imx);  	clk_rate = clk_get_rate(lpi2c_imx->clks[0].clk); 	if (!clk_rate) 		return -EINVAL; 	clk_rate = lpi2c_imx->rate_per;  	if (lpi2c_imx->mode == HS || lpi2c_imx->mode == ULTRA_FAST) 		filt = 0; 	if (ret) 		return ret;  	lpi2c_imx->rate_per = clk_get_rate(lpi2c_imx->clks[0].clk); 	if (!lpi2c_imx->rate_pe","Write a secure c function that fixes the vulnerability shown in drivers/i2c/busses/i2c-imx-lpi2c.c","	__u8			*rx_buf; 	__u8			*tx_buf; 	struct completion	complete; 	unsigned long		rate_per; 	unsigned int		msglen; 	unsigned int		delivered; 	unsigned int		block_data;  	lpi2c_imx_set_mode(lpi2c_imx);  	clk_rate = clk_get_rate(lpi2c_imx->clks[0].clk); 	if (!clk_rate) 		return -EINVAL; 	clk_rate = lpi2c_imx->rate_per;  	if (lpi2c_imx->mode == HS || lpi2c_imx->mode == ULTRA_FAST) 		filt = 0; 	if (ret) 		return ret;  	lpi2c_imx->rate_per = clk_get_rate(lpi2c_imx->clks[0].clk); 	if (!lpi2c_imx->rate_pe","	__u8			*rx_buf; 	__u8			*tx_buf; 	struct completion	complete; 	unsigned long		rate_per; 	unsigned int		msglen; 	unsigned int		delivered; 	unsigned int		block_data;  	lpi2c_imx_set_mode(lpi2c_imx);  	clk_rate = clk_get_rate(lpi2c_imx->clks[0].clk); 	if (!clk_rate) 		return -EINVAL; 	clk_rate = lpi2c_imx->rate_per;  	if (lpi2c_imx->mode == HS || lpi2c_imx->mode == ULTRA_FAST) 		filt = 0; 	if (ret) 		return ret;  	lpi2c_imx->rate_per = clk_get_rate(lpi2c_imx->clks[0].clk); 	if (!lpi2c_imx->rate_pe","unknown","https://github.com/OpenNuvoton/MA35D1_linux-6.6.y-beta/commit/673b8e3f1e070341257a739a5b0a99702d6c932b","drivers/i2c/busses/i2c-imx-lpi2c.c"
"train_sec","unknown","            auto_ip=False,             timeout=CREATE_SERVER_TIMEOUT,             wait=True,             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,         )         logger.info(""""Launched builder, waiting for cloud-init to complete: %s."""", builder.id)         ssh_conn = _get_ssh_connection(conn=conn, server=builder, ssh_key=BUILDER_KEY_PATH)","Write a secure py function that fixes the vulnerability shown in app/src/github_runner_image_builder/openstack_builder.py","            auto_ip=False,             timeout=CREATE_SERVER_TIMEOUT,             wait=True,             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,         )         logger.info(""""Launched builder, waiting for cloud-init to complete: %s."""", builder.id)         ssh_conn = _get_ssh_connection(conn=conn, server=builder, ssh_key=BUILDER_KEY_PATH)","            auto_ip=False,             timeout=CREATE_SERVER_TIMEOUT,             wait=True,             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,         )         logger.info(""""Launched builder, waiting for cloud-init to complete: %s."""", builder.id)         ssh_conn = _get_ssh_connection(conn=conn, server=builder, ssh_key=BUILDER_KEY_PATH)","unknown","https://github.com/canonical/github-runner-image-builder-operator/commit/228c3110606668d6027841f035f4af8060bc6fb8","app/src/github_runner_image_builder/openstack_builder.py"
"train_sec","unknown","            userdata=""""""""""""#!/bin/bash hostnamectl set-hostname github-runner """""""""""",             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,             timeout=60 * 20,             wait=True,         )","Write a secure py function that fixes the vulnerability shown in app/tests/integration/helpers.py","            userdata=""""""""""""#!/bin/bash hostnamectl set-hostname github-runner """""""""""",             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,             timeout=60 * 20,             wait=True,         )","            userdata=""""""""""""#!/bin/bash hostnamectl set-hostname github-runner """""""""""",             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,             timeout=60 * 20,             wait=True,         )","unknown","https://github.com/canonical/github-runner-image-builder-operator/commit/228c3110606668d6027841f035f4af8060bc6fb8","app/tests/integration/helpers.py"
"train_sec","unknown","            auto_ip=False,             wait=True,             timeout=CREATE_SERVER_TIMEOUT,             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,         )          yield","Write a secure py function that fixes the vulnerability shown in app/tests/integration/test_openstack_builder.py","            auto_ip=False,             wait=True,             timeout=CREATE_SERVER_TIMEOUT,             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,         )          yield","            auto_ip=False,             wait=True,             timeout=CREATE_SERVER_TIMEOUT,             # 2025/07/24 - This option is set to mitigate CVE-2024-6174             config_drive=True,         )          yield","unknown","https://github.com/canonical/github-runner-image-builder-operator/commit/228c3110606668d6027841f035f4af8060bc6fb8","app/tests/integration/test_openstack_builder.py"
"train_sec","unknown","	msleep(125); 	if (cifs_rdma_enabled(server)) 		smbd_destroy(server);  	if (server->ssocket) { 		sock_release(server->ssocket); 		server->ssocket = NULL;  		/* Release netns reference for the socket. */ 		put_net(cifs_net_ns(server)); 	}  	if (!list_empty(&server->pending_mid_q)) { 		 */ 	}  	/* Release netns reference for this server. */ 	put_net(cifs_net_ns(server)); 	kfree(server->leaf_fullpath); 	kfree(server->hostname);  	tcp_ses->ops = ctx->ops; 	tcp_ses->vals = ctx->vals;  	/* Grab netns ","Write a secure c function that fixes the vulnerability shown in fs/smb/client/connect.c","	msleep(125); 	if (cifs_rdma_enabled(server)) 		smbd_destroy(server);  	if (server->ssocket) { 		sock_release(server->ssocket); 		server->ssocket = NULL;  		/* Release netns reference for the socket. */ 		put_net(cifs_net_ns(server)); 	}  	if (!list_empty(&server->pending_mid_q)) { 		 */ 	}  	/* Release netns reference for this server. */ 	put_net(cifs_net_ns(server)); 	kfree(server->leaf_fullpath); 	kfree(server->hostname);  	tcp_ses->ops = ctx->ops; 	tcp_ses->vals = ctx->vals;  	/* Grab netns ","	msleep(125); 	if (cifs_rdma_enabled(server)) 		smbd_destroy(server);  	if (server->ssocket) { 		sock_release(server->ssocket); 		server->ssocket = NULL;  		/* Release netns reference for the socket. */ 		put_net(cifs_net_ns(server)); 	}  	if (!list_empty(&server->pending_mid_q)) { 		 */ 	}  	/* Release netns reference for this server. */ 	put_net(cifs_net_ns(server)); 	kfree(server->leaf_fullpath); 	kfree(server->hostname);  	tcp_ses->ops = ctx->ops; 	tcp_ses->vals = ctx->vals;  	/* Grab netns ","unknown","https://github.com/microsoft/OHCL-Linux-Kernel/commit/e89d8959527b0d6976294ed666773d62edbfd784","fs/smb/client/connect.c"
"train_sec","unknown","			 server->ssocket->flags); 		sock_release(server->ssocket); 		server->ssocket = NULL; 		put_net(cifs_net_ns(server)); 	} 	server->sequence_number = 0; 	server->session_estab = false; 		/* 		 * Grab netns reference for the socket. 		 * 		 * This reference will be released in several situations: 		 * - In the failure path before the cifsd thread is started. 		 * - In the all place where server->socket is released, it is 		 *   also set to NULL. 		 * - Ultimately in clean_demultiplex_info(), duri","Write a secure c function that fixes the vulnerability shown in fs/smb/client/connect.c","			 server->ssocket->flags); 		sock_release(server->ssocket); 		server->ssocket = NULL; 		put_net(cifs_net_ns(server)); 	} 	server->sequence_number = 0; 	server->session_estab = false; 		/* 		 * Grab netns reference for the socket. 		 * 		 * This reference will be released in several situations: 		 * - In the failure path before the cifsd thread is started. 		 * - In the all place where server->socket is released, it is 		 *   also set to NULL. 		 * - Ultimately in clean_demultiplex_info(), duri","			 server->ssocket->flags); 		sock_release(server->ssocket); 		server->ssocket = NULL; 		put_net(cifs_net_ns(server)); 	} 	server->sequence_number = 0; 	server->session_estab = false; 		/* 		 * Grab netns reference for the socket. 		 * 		 * This reference will be released in several situations: 		 * - In the failure path before the cifsd thread is started. 		 * - In the all place where server->socket is released, it is 		 *   also set to NULL. 		 * - Ultimately in clean_demultiplex_info(), duri","unknown","https://github.com/microsoft/OHCL-Linux-Kernel/commit/5507b8d8ee946f0f3ef834ffe810e9cbd7befdda","fs/smb/client/connect.c"
"train_sec","unknown","	""""fmt"""" 	""""strings""""  	""""github.com/btcsuite/btcd/btcec"""" 	""""github.com/btcsuite/btcd/btcec/v2""""  	""""math/big""""  	}  	// Parse the compressed public key 	pubKey, err := btcec.ParsePubKey(pubKeyBytes, btcec.S256()) 	pubKey, err := btcec.ParsePubKey(pubKeyBytes) 	if err != nil { 		return nil, 0, err 	}","Write a secure go function that fixes the vulnerability shown in precompiles/addr/addr.go","	""""fmt"""" 	""""strings""""  	""""github.com/btcsuite/btcd/btcec"""" 	""""github.com/btcsuite/btcd/btcec/v2""""  	""""math/big""""  	}  	// Parse the compressed public key 	pubKey, err := btcec.ParsePubKey(pubKeyBytes, btcec.S256()) 	pubKey, err := btcec.ParsePubKey(pubKeyBytes) 	if err != nil { 		return nil, 0, err 	}","	""""fmt"""" 	""""strings""""  	""""github.com/btcsuite/btcd/btcec"""" 	""""github.com/btcsuite/btcd/btcec/v2""""  	""""math/big""""  	}  	// Parse the compressed public key 	pubKey, err := btcec.ParsePubKey(pubKeyBytes, btcec.S256()) 	pubKey, err := btcec.ParsePubKey(pubKeyBytes) 	if err != nil { 		return nil, 0, err 	}","unknown","https://github.com/sei-protocol/sei-chain/commit/9836e33a207bd64ee4e304118fdd733d8f2ec32c","precompiles/addr/addr.go"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/liquidprjkt/liquid_kernel_desktop_x86/commit/8ac90f6824fc44d2e55a82503ddfc95defb19ae0","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/jmontleon/linux-bianbu/commit/8ac90f6824fc44d2e55a82503ddfc95defb19ae0","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/lmchale/linux/commit/8ac90f6824fc44d2e55a82503ddfc95defb19ae0","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/jmontleon/linux-eswin/commit/8ac90f6824fc44d2e55a82503ddfc95defb19ae0","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/repinger/linux/commit/2a76bc2b24ed889a689fb1c9015307bf16aafb5b","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/libre-computer-project/libretech-linux/commit/2a76bc2b24ed889a689fb1c9015307bf16aafb5b","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/Nevuly/WSL2-Linux-Kernel-Rolling-LTS/commit/2a76bc2b24ed889a689fb1c9015307bf16aafb5b","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/Nevuly/WSL2-Linux-Kernel-Rolling-EXP/commit/2a76bc2b24ed889a689fb1c9015307bf16aafb5b","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/raspberrypi/linux/commit/2a76bc2b24ed889a689fb1c9015307bf16aafb5b","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/goldelico/letux-kernel/commit/2a76bc2b24ed889a689fb1c9015307bf16aafb5b","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/frank-w/BPI-Router-Linux/commit/2a76bc2b24ed889a689fb1c9015307bf16aafb5b","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/RVCK-Project/rvck/commit/15a0a5de49507062bc3be4014a403d8cea5533de","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/foundriesio/linux/commit/15a0a5de49507062bc3be4014a403d8cea5533de","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/jmontleon/linux-fml13v01/commit/15a0a5de49507062bc3be4014a403d8cea5533de","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/brokestar233/android_kernel_common_oneplus_sm8750/commit/15a0a5de49507062bc3be4014a403d8cea5533de","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/GrapheneOS/kernel_common-6.6/commit/15a0a5de49507062bc3be4014a403d8cea5533de","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/jmontleon/linux-rockos/commit/15a0a5de49507062bc3be4014a403d8cea5533de","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq; 	size_t sensitive_size; 	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encry","cwe-476","https://github.com/embeddedTS/linux-lts/commit/15a0a5de49507062bc3be4014a403d8cea5533de","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/crrashh1542/android_kernel_microsoft_wsa/commit/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/ramabondanp/android_kernel_common-6.1/commit/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/Kyuofox-Studio/android_kernel_xiaomi_sm8650/commit/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/yaap/kernel_oneplus_sm8650/commit/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/khusika/linux_stable-orangepi/commit/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/peridot-dev/android_kernel_xiaomi_sm8635/commit/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438","fs/smb/client/smb2ops.c"
"train_sec","unknown","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","Write a secure c function that fixes the vulnerability shown in fs/smb/client/smb2ops.c (avoiding CWE-476)","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","	u8 key[SMB3_ENC_DEC_KEY_SIZE]; 	struct aead_request *req; 	u8 *iv; 	DECLARE_CRYPTO_WAIT(wait); 	unsigned int crypt_len = le32_to_cpu(tr_hdr->OriginalMessageSize); 	void *creq;  	aead_request_set_crypt(req, sg, sg, crypt_len, iv); 	aead_request_set_ad(req, assoc_data_len);  	rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req); 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG, 				  crypto_req_done, &wait);  	rc = crypto_wait_req(enc ? crypto_aead_encrypt(req) 				: crypto_ae","cwe-476","https://github.com/GrapheneOS/kernel_common-6.1/commit/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438","fs/smb/client/smb2ops.c"
"train_sec","unknown","	""""strconv"""" 	""""strings""""  	""""github.com/btcsuite/btcd/btcec"""" 	""""github.com/btcsuite/btcd/btcec/v2"""" )  // BIP44Params wraps BIP 44 params (5 level BIP 32 path). // If harden is true, the derivation is 'hardened'. // It returns the new private key and new chain code. // For more information on hardened keys see: //  - https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki //   - https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki func derivePrivateKey(privKeyBytes [32]byte, c","Write a secure go function that fixes the vulnerability shown in crypto/hd/hdpath.go","	""""strconv"""" 	""""strings""""  	""""github.com/btcsuite/btcd/btcec"""" 	""""github.com/btcsuite/btcd/btcec/v2"""" )  // BIP44Params wraps BIP 44 params (5 level BIP 32 path). // If harden is true, the derivation is 'hardened'. // It returns the new private key and new chain code. // For more information on hardened keys see: //  - https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki //   - https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki func derivePrivateKey(privKeyBytes [32]byte, c","	""""strconv"""" 	""""strings""""  	""""github.com/btcsuite/btcd/btcec"""" 	""""github.com/btcsuite/btcd/btcec/v2"""" )  // BIP44Params wraps BIP 44 params (5 level BIP 32 path). // If harden is true, the derivation is 'hardened'. // It returns the new private key and new chain code. // For more information on hardened keys see: //  - https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki //   - https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki func derivePrivateKey(privKeyBytes [32]byte, c","unknown","https://github.com/sei-protocol/sei-cosmos/commit/c9df9ed00b2ab9133bf3709fd212a59121ce45b8","crypto/hd/hdpath.go"
"train_sec","unknown","	""""io"""" 	""""math/big""""  	secp256k1 """"github.com/btcsuite/btcd/btcec"""" 	secp256k1 """"github.com/btcsuite/btcd/btcec/v2"""" 	""""github.com/tendermint/tendermint/crypto"""" 	""""golang.org/x/crypto/ripemd160"""" // nolint: staticcheck // necessary for Bitcoin address format  // PubKey performs the point-scalar multiplication from the privKey on the // generator point to get the pubkey. func (privKey *PrivKey) PubKey() cryptotypes.PubKey { 	_, pubkeyObject := secp256k1.PrivKeyFromBytes(secp256k1.S256(), privKe","Write a secure go function that fixes the vulnerability shown in crypto/keys/secp256k1/secp256k1.go","	""""io"""" 	""""math/big""""  	secp256k1 """"github.com/btcsuite/btcd/btcec"""" 	secp256k1 """"github.com/btcsuite/btcd/btcec/v2"""" 	""""github.com/tendermint/tendermint/crypto"""" 	""""golang.org/x/crypto/ripemd160"""" // nolint: staticcheck // necessary for Bitcoin address format  // PubKey performs the point-scalar multiplication from the privKey on the // generator point to get the pubkey. func (privKey *PrivKey) PubKey() cryptotypes.PubKey { 	_, pubkeyObject := secp256k1.PrivKeyFromBytes(secp256k1.S256(), privKe","	""""io"""" 	""""math/big""""  	secp256k1 """"github.com/btcsuite/btcd/btcec"""" 	secp256k1 """"github.com/btcsuite/btcd/btcec/v2"""" 	""""github.com/tendermint/tendermint/crypto"""" 	""""golang.org/x/crypto/ripemd160"""" // nolint: staticcheck // necessary for Bitcoin address format  // PubKey performs the point-scalar multiplication from the privKey on the // generator point to get the pubkey. func (privKey *PrivKey) PubKey() cryptotypes.PubKey { 	_, pubkeyObject := secp256k1.PrivKeyFromBytes(secp256k1.S256(), privKe","unknown","https://github.com/sei-protocol/sei-cosmos/commit/c9df9ed00b2ab9133bf3709fd212a59121ce45b8","crypto/keys/secp256k1/secp256k1.go"
"train_sec","unknown","	""""math/big"""" 	""""testing""""  	btcSecp256k1 """"github.com/btcsuite/btcd/btcec"""" 	btcSecp256k1 """"github.com/btcsuite/btcd/btcec/v2"""" 	""""github.com/stretchr/testify/require"""" ) ","Write a secure go function that fixes the vulnerability shown in crypto/keys/secp256k1/secp256k1_internal_test.go","	""""math/big"""" 	""""testing""""  	btcSecp256k1 """"github.com/btcsuite/btcd/btcec"""" 	btcSecp256k1 """"github.com/btcsuite/btcd/btcec/v2"""" 	""""github.com/stretchr/testify/require"""" ) ","	""""math/big"""" 	""""testing""""  	btcSecp256k1 """"github.com/btcsuite/btcd/btcec"""" 	btcSecp256k1 """"github.com/btcsuite/btcd/btcec/v2"""" 	""""github.com/stretchr/testify/require"""" ) ","unknown","https://github.com/sei-protocol/sei-cosmos/commit/c9df9ed00b2ab9133bf3709fd212a59121ce45b8","crypto/keys/secp256k1/secp256k1_internal_test.go"
"train_sec","unknown","    SECRET_KEY: str = """"your-secret-key-here-change-in-production""""     ALGORITHM: str = """"HS256""""     ACCESS_TOKEN_EXPIRE_MINUTES: int = 30     REFRESH_TOKEN_EXPIRE_MINUTES: int = 60 * 24 * 7  # 7 days          # Database settings     DATABASE_URL: str = """"postgresql://postgres:password@db:5432/raadi""""","Write a secure py function that fixes the vulnerability shown in app/core/config.py (avoiding CWE-862)","    SECRET_KEY: str = """"your-secret-key-here-change-in-production""""     ALGORITHM: str = """"HS256""""     ACCESS_TOKEN_EXPIRE_MINUTES: int = 30     REFRESH_TOKEN_EXPIRE_MINUTES: int = 60 * 24 * 7  # 7 days          # Database settings     DATABASE_URL: str = """"postgresql://postgres:password@db:5432/raadi""""","    SECRET_KEY: str = """"your-secret-key-here-change-in-production""""     ALGORITHM: str = """"HS256""""     ACCESS_TOKEN_EXPIRE_MINUTES: int = 30     REFRESH_TOKEN_EXPIRE_MINUTES: int = 60 * 24 * 7  # 7 days          # Database settings     DATABASE_URL: str = """"postgresql://postgres:password@db:5432/raadi""""","cwe-862","https://github.com/Jibsta91/raadi-marketplace/commit/95ac3c0e5c60c4732e54e179d29f606faecbc440","app/core/config.py"
"train_sec","unknown","from passlib.context import CryptContext from datetime import datetime, timedelta from typing import Any, Union, Optional from jose import jwt import secrets  from app.core.config import settings from typing import Optional, Union, Any import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext from .config import settings  # Password hashing # Password hashing context pwd_context = CryptContext(schemes=[""""bcrypt""""], deprecated=""""auto"""")   def verify_password","Write a secure py function that fixes the vulnerability shown in app/core/security.py (avoiding CWE-862)","from passlib.context import CryptContext from datetime import datetime, timedelta from typing import Any, Union, Optional from jose import jwt import secrets  from app.core.config import settings from typing import Optional, Union, Any import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext from .config import settings  # Password hashing # Password hashing context pwd_context = CryptContext(schemes=[""""bcrypt""""], deprecated=""""auto"""")   def verify_password","from passlib.context import CryptContext from datetime import datetime, timedelta from typing import Any, Union, Optional from jose import jwt import secrets  from app.core.config import settings from typing import Optional, Union, Any import jwt from jwt.exceptions import InvalidTokenError from passlib.context import CryptContext from .config import settings  # Password hashing # Password hashing context pwd_context = CryptContext(schemes=[""""bcrypt""""], deprecated=""""auto"""")   def verify_password","cwe-862","https://github.com/Jibsta91/raadi-marketplace/commit/95ac3c0e5c60c4732e54e179d29f606faecbc440","app/core/security.py"
"train_sec","unknown","			      const struct tcphdr *oth, unsigned int otcplen) { 	struct tcphdr *tcph; 	int needs_ack;  	skb_reset_transport_header(nskb); 	tcph = skb_put(nskb, sizeof(struct tcphdr)); 	tcph = skb_put_zero(nskb, sizeof(struct tcphdr)); 	/* Truncate to length (no data) */ 	tcph->doff = sizeof(struct tcphdr)/4; 	tcph->source = oth->dest; 	tcph->dest = oth->source;  	if (oth->ack) { 		needs_ack = 0; 		tcph->seq = oth->ack_seq; 		tcph->ack_seq = 0; 	} else { 		needs_ack = 1; 		tcph->ack_seq = htonl(ntohl(","Write a secure c function that fixes the vulnerability shown in net/ipv6/netfilter/nf_reject_ipv6.c (avoiding CWE-94)","			      const struct tcphdr *oth, unsigned int otcplen) { 	struct tcphdr *tcph; 	int needs_ack;  	skb_reset_transport_header(nskb); 	tcph = skb_put(nskb, sizeof(struct tcphdr)); 	tcph = skb_put_zero(nskb, sizeof(struct tcphdr)); 	/* Truncate to length (no data) */ 	tcph->doff = sizeof(struct tcphdr)/4; 	tcph->source = oth->dest; 	tcph->dest = oth->source;  	if (oth->ack) { 		needs_ack = 0; 		tcph->seq = oth->ack_seq; 		tcph->ack_seq = 0; 	} else { 		needs_ack = 1; 		tcph->ack_seq = htonl(ntohl(","			      const struct tcphdr *oth, unsigned int otcplen) { 	struct tcphdr *tcph; 	int needs_ack;  	skb_reset_transport_header(nskb); 	tcph = skb_put(nskb, sizeof(struct tcphdr)); 	tcph = skb_put_zero(nskb, sizeof(struct tcphdr)); 	/* Truncate to length (no data) */ 	tcph->doff = sizeof(struct tcphdr)/4; 	tcph->source = oth->dest; 	tcph->dest = oth->source;  	if (oth->ack) { 		needs_ack = 0; 		tcph->seq = oth->ack_seq; 		tcph->ack_seq = 0; 	} else { 		needs_ack = 1; 		tcph->ack_seq = htonl(ntohl(","cwe-94","https://github.com/bytesatwork/linux-imx/commit/82d4ac164f513c7519df6582eab094dfcacd6f34","net/ipv6/netfilter/nf_reject_ipv6.c"
"train_sec","unknown"," //generating pdf  require_once('tcpdf/tcpdf.php'); require_once 'vendor/autoload.php';   class MYPDF extends TCPDF {","Write a secure php function that fixes the vulnerability shown in cetaknotisbm.php"," //generating pdf  require_once('tcpdf/tcpdf.php'); require_once 'vendor/autoload.php';   class MYPDF extends TCPDF {"," //generating pdf  require_once('tcpdf/tcpdf.php'); require_once 'vendor/autoload.php';   class MYPDF extends TCPDF {","unknown","https://github.com/mrpixel04/taxtrek/commit/9f3edfd686c28a592dfe6d093e68869d9481b5fc","cetaknotisbm.php"
"train_sec","unknown","/*******************************************************************************  * Copyright (c) 2012 IBM Corporation and others.  * Copyright (c) 2012-2025 IBM Corporation and others.  * All rights reserved. This program and the accompanying materials  * are made available under the terms of the Eclipse Public License 2.0  * which accompanies this distribution, and is available at     }      /**      * Gets the collection match for the web resource collection based on the following custom meth","Write a secure java function that fixes the vulnerability shown in dev/com.ibm.ws.webcontainer.security/src/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategy.java","/*******************************************************************************  * Copyright (c) 2012 IBM Corporation and others.  * Copyright (c) 2012-2025 IBM Corporation and others.  * All rights reserved. This program and the accompanying materials  * are made available under the terms of the Eclipse Public License 2.0  * which accompanies this distribution, and is available at     }      /**      * Gets the collection match for the web resource collection based on the following custom meth","/*******************************************************************************  * Copyright (c) 2012 IBM Corporation and others.  * Copyright (c) 2012-2025 IBM Corporation and others.  * All rights reserved. This program and the accompanying materials  * are made available under the terms of the Eclipse Public License 2.0  * which accompanies this distribution, and is available at     }      /**      * Gets the collection match for the web resource collection based on the following custom meth","unknown","https://github.com/OpenLiberty/open-liberty/commit/0a66773f10a6e8242a455fac576599a640805339","dev/com.ibm.ws.webcontainer.security/src/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategy.java"
"train_sec","unknown","        }     }      @Test     public void performMatch_Omission() {         final String methodName = """"performMatch_Omission"""";         try {             String resourceName = ONE_EXACT_URL;             String method = """"CUSTOM"""";             List<SecurityConstraint> securityConstraints = createSecurityConstraintsOmission(ONE_EXACT_URL, oneCustomMethod, testRoles);             SecurityConstraintCollection securityConstraintCollection = new SecurityConstraintCollectionImpl(securityConstraints);","Write a secure java function that fixes the vulnerability shown in dev/com.ibm.ws.webcontainer.security/test/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategyTest.java","        }     }      @Test     public void performMatch_Omission() {         final String methodName = """"performMatch_Omission"""";         try {             String resourceName = ONE_EXACT_URL;             String method = """"CUSTOM"""";             List<SecurityConstraint> securityConstraints = createSecurityConstraintsOmission(ONE_EXACT_URL, oneCustomMethod, testRoles);             SecurityConstraintCollection securityConstraintCollection = new SecurityConstraintCollectionImpl(securityConstraints);","        }     }      @Test     public void performMatch_Omission() {         final String methodName = """"performMatch_Omission"""";         try {             String resourceName = ONE_EXACT_URL;             String method = """"CUSTOM"""";             List<SecurityConstraint> securityConstraints = createSecurityConstraintsOmission(ONE_EXACT_URL, oneCustomMethod, testRoles);             SecurityConstraintCollection securityConstraintCollection = new SecurityConstraintCollectionImpl(securityConstraints);","unknown","https://github.com/OpenLiberty/open-liberty/commit/0a66773f10a6e8242a455fac576599a640805339","dev/com.ibm.ws.webcontainer.security/test/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategyTest.java"
"train_sec","unknown","	spinlock_t		nsid_lock; 	atomic_t		fnhe_genid;  	KABI_FILL_HOLE(struct llist_node defer_free_list) 	struct list_head	list;		/* list of network namespaces */ 	struct list_head	exit_list;	/* To linked to call pernet exit 						 * methods on dead net (  	/* Used to store attached BPF programs */ 	struct netns_bpf	bpf; 	KABI_FILL_HOLE(struct llist_node defer_free_list)  	/* Note : following structs are cache line aligned */ #ifdef CONFIG_XFRM","Write a secure h function that fixes the vulnerability shown in include/net/net_namespace.h","	spinlock_t		nsid_lock; 	atomic_t		fnhe_genid;  	KABI_FILL_HOLE(struct llist_node defer_free_list) 	struct list_head	list;		/* list of network namespaces */ 	struct list_head	exit_list;	/* To linked to call pernet exit 						 * methods on dead net (  	/* Used to store attached BPF programs */ 	struct netns_bpf	bpf; 	KABI_FILL_HOLE(struct llist_node defer_free_list)  	/* Note : following structs are cache line aligned */ #ifdef CONFIG_XFRM","	spinlock_t		nsid_lock; 	atomic_t		fnhe_genid;  	KABI_FILL_HOLE(struct llist_node defer_free_list) 	struct list_head	list;		/* list of network namespaces */ 	struct list_head	exit_list;	/* To linked to call pernet exit 						 * methods on dead net (  	/* Used to store attached BPF programs */ 	struct netns_bpf	bpf; 	KABI_FILL_HOLE(struct llist_node defer_free_list)  	/* Note : following structs are cache line aligned */ #ifdef CONFIG_XFRM","unknown","https://github.com/RVCK-Project/rvck-olk/commit/f05161c95afbcd97d1e11d54dc5f76a6cc9a3dcc","include/net/net_namespace.h"
"train_sec","unknown","        if (canManage) return PermissionLevel.MANAGE;         if (canDelete) return PermissionLevel.DELETE;         if (canWrite) return PermissionLevel.WRITE;         if (canRead) return PermissionLevel.read;         if (canRead) return PermissionLevel.READ;         return null;     } }","Write a secure java function that fixes the vulnerability shown in src/main/java/de/datagroup/textbaustein/model/entity/Permission.java (avoiding CWE-89)","        if (canManage) return PermissionLevel.MANAGE;         if (canDelete) return PermissionLevel.DELETE;         if (canWrite) return PermissionLevel.WRITE;         if (canRead) return PermissionLevel.read;         if (canRead) return PermissionLevel.READ;         return null;     } }","        if (canManage) return PermissionLevel.MANAGE;         if (canDelete) return PermissionLevel.DELETE;         if (canWrite) return PermissionLevel.WRITE;         if (canRead) return PermissionLevel.read;         if (canRead) return PermissionLevel.READ;         return null;     } }","cwe-89","https://github.com/ericscheel/DGTextbausteinTool/commit/7add13bd49ecda59ab17dadb860f676549e5aa35","src/main/java/de/datagroup/textbaustein/model/entity/Permission.java"
"train_sec","unknown"," * @level_high: The higher bound for the levels for which the PGD allocs are required  * @new_pgds:   Ptr to an array (size MIDGARD_MMU_BOTTOMLEVEL+1) to write the  *              newly allocated PGD addresses to.  *  * @pool_grown: True if new PGDs required the memory pool to grow to allocate more pages,  *              or false otherwise  * Numerically, level_low < level_high, not to be confused with top level and  * bottom level concepts for MMU PGDs. They are only used as low and high bounds","Write a secure c function that fixes the vulnerability shown in gpu/gpu_mali/mali_avalon/mali-r44p1/drivers/gpu/arm/midgard/mmu/mali_kbase_mmu.c"," * @level_high: The higher bound for the levels for which the PGD allocs are required  * @new_pgds:   Ptr to an array (size MIDGARD_MMU_BOTTOMLEVEL+1) to write the  *              newly allocated PGD addresses to.  *  * @pool_grown: True if new PGDs required the memory pool to grow to allocate more pages,  *              or false otherwise  * Numerically, level_low < level_high, not to be confused with top level and  * bottom level concepts for MMU PGDs. They are only used as low and high bounds"," * @level_high: The higher bound for the levels for which the PGD allocs are required  * @new_pgds:   Ptr to an array (size MIDGARD_MMU_BOTTOMLEVEL+1) to write the  *              newly allocated PGD addresses to.  *  * @pool_grown: True if new PGDs required the memory pool to grow to allocate more pages,  *              or false otherwise  * Numerically, level_low < level_high, not to be confused with top level and  * bottom level concepts for MMU PGDs. They are only used as low and high bounds","unknown","https://github.com/mt6878-devs/android_vendor_mediatek_kernel_modules/commit/ce33eb794b0c6dd80d24a104777495e993109ab1","gpu/gpu_mali/mali_avalon/mali-r44p1/drivers/gpu/arm/midgard/mmu/mali_kbase_mmu.c"
"train_sec","unknown","#[cfg(test)] mod tests {     use super::*;     use crate::kinematic_traits::{Joints, Kinematics, JOINTS_AT_ZERO};     use crate::kinematic_traits::{Joints, Kinematics};     use crate::kinematics_impl::OPWKinematics;     use crate::parameters::opw_kinematics::Parameters; ","Write a secure rs function that fixes the vulnerability shown in src/kinematics_impl.rs","#[cfg(test)] mod tests {     use super::*;     use crate::kinematic_traits::{Joints, Kinematics, JOINTS_AT_ZERO};     use crate::kinematic_traits::{Joints, Kinematics};     use crate::kinematics_impl::OPWKinematics;     use crate::parameters::opw_kinematics::Parameters; ","#[cfg(test)] mod tests {     use super::*;     use crate::kinematic_traits::{Joints, Kinematics, JOINTS_AT_ZERO};     use crate::kinematic_traits::{Joints, Kinematics};     use crate::kinematics_impl::OPWKinematics;     use crate::parameters::opw_kinematics::Parameters; ","unknown","https://github.com/bourumir-wyngs/rs-opw-kinematics/commit/b2c37fb118b8f3cbae11e40d0fe7d4a5e9bdfe77","src/kinematics_impl.rs"
"train_sec","unknown","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","Write a secure c function that fixes the vulnerability shown in drivers/hid/hid-core.c","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","unknown","https://github.com/eclipse-oniro-mirrors/kernel_linux_5.10/commit/a61204816fb197195dfdeca32f681a5b7a0aad8e","drivers/hid/hid-core.c"
"train_sec","unknown","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","Write a secure c function that fixes the vulnerability shown in drivers/hid/hid-core.c","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","unknown","https://github.com/eclipse-oniro-openharmony/kernel_linux_5.10/commit/a61204816fb197195dfdeca32f681a5b7a0aad8e","drivers/hid/hid-core.c"
"train_sec","unknown","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","Write a secure c function that fixes the vulnerability shown in drivers/hid/hid-core.c","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","	while (multiplier_collection->parent_idx != -1 && 	       multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = &hid->collection[multiplier_collection->parent_idx]; 	if (multiplier_collection->type != HID_COLLECTION_LOGICAL) 		multiplier_collection = NULL;  	effective_multiplier = hid_calculate_multiplier(hid, multiplier); ","unknown","https://github.com/openharmony/kernel_linux_5.10/commit/a61204816fb197195dfdeca32f681a5b7a0aad8e","drivers/hid/hid-core.c"
"train_sec","unknown"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con","Write a secure c function that fixes the vulnerability shown in net/xfrm/xfrm_state.c (avoiding CWE-125)"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con","cwe-125","https://github.com/eclipse-oniro-mirrors/kernel_linux_5.10/commit/a499d7ea7506bf2de26ce8dae13a149a36505917","net/xfrm/xfrm_state.c"
"train_sec","unknown"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con","Write a secure c function that fixes the vulnerability shown in net/xfrm/xfrm_state.c (avoiding CWE-125)"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con","cwe-125","https://github.com/eclipse-oniro-openharmony/kernel_linux_5.10/commit/a499d7ea7506bf2de26ce8dae13a149a36505917","net/xfrm/xfrm_state.c"
"train_sec","unknown"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con","Write a secure c function that fixes the vulnerability shown in net/xfrm/xfrm_state.c (avoiding CWE-125)"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con"," #define xfrm_state_deref_prot(table, net) \ 	rcu_dereference_protected((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock)) #define xfrm_state_deref_check(table, net) \ 	rcu_dereference_check((table), lockdep_is_held(&(net)->xfrm.xfrm_state_lock))  static void xfrm_state_gc_task(struct work_struct *work);  					 u32 reqid, 					 unsigned short family) { 	lockdep_assert_held(&net->xfrm.xfrm_state_lock);  	return __xfrm_dst_hash(daddr, saddr, reqid, family, net->xfrm.state_hmask); }  					 con","cwe-125","https://github.com/openharmony/kernel_linux_5.10/commit/a499d7ea7506bf2de26ce8dae13a149a36505917","net/xfrm/xfrm_state.c"
"train_sec","unknown","package org.folio;  import org.apache.commons.lang.math.RandomUtils; import org.apache.commons.lang3.RandomUtils; import org.folio.test.TestBaseEureka; import org.folio.test.annotation.FolioTest; import org.folio.test.config.TestModuleConfiguration;","Write a secure java function that fixes the vulnerability shown in mod-oai-pmh/src/test/java/org/folio/ModOaiPmhTests.java","package org.folio;  import org.apache.commons.lang.math.RandomUtils; import org.apache.commons.lang3.RandomUtils; import org.folio.test.TestBaseEureka; import org.folio.test.annotation.FolioTest; import org.folio.test.config.TestModuleConfiguration;","package org.folio;  import org.apache.commons.lang.math.RandomUtils; import org.apache.commons.lang3.RandomUtils; import org.folio.test.TestBaseEureka; import org.folio.test.annotation.FolioTest; import org.folio.test.config.TestModuleConfiguration;","unknown","https://github.com/folio-org/folio-integration-tests/commit/748aca80a62590692e91e76da24516ac880e3bb4","mod-oai-pmh/src/test/java/org/folio/ModOaiPmhTests.java"
"train_sec","unknown","/*******************************************************************************  * Copyright (c) 2012 IBM Corporation and others.  * Copyright (c) 2012-2025 IBM Corporation and others.  * All rights reserved. This program and the accompanying materials  * are made available under the terms of the Eclipse Public License 2.0  * which accompanies this distribution, and is available at     }      /**      * Gets the collection match for the web resource collection based on the following custom meth","Write a secure java function that fixes the vulnerability shown in dev/com.ibm.ws.webcontainer.security/src/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategy.java","/*******************************************************************************  * Copyright (c) 2012 IBM Corporation and others.  * Copyright (c) 2012-2025 IBM Corporation and others.  * All rights reserved. This program and the accompanying materials  * are made available under the terms of the Eclipse Public License 2.0  * which accompanies this distribution, and is available at     }      /**      * Gets the collection match for the web resource collection based on the following custom meth","/*******************************************************************************  * Copyright (c) 2012 IBM Corporation and others.  * Copyright (c) 2012-2025 IBM Corporation and others.  * All rights reserved. This program and the accompanying materials  * are made available under the terms of the Eclipse Public License 2.0  * which accompanies this distribution, and is available at     }      /**      * Gets the collection match for the web resource collection based on the following custom meth","unknown","https://github.com/OpenLiberty/open-liberty/commit/2670a2313994625e4a8bd3bb7af2ec24a96e251c","dev/com.ibm.ws.webcontainer.security/src/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategy.java"
"train_sec","unknown","        }     }      @Test     public void performMatch_Omission() {         final String methodName = """"performMatch_Omission"""";         try {             String resourceName = ONE_EXACT_URL;             String method = """"CUSTOM"""";             List<SecurityConstraint> securityConstraints = createSecurityConstraintsOmission(ONE_EXACT_URL, oneCustomMethod, testRoles);             SecurityConstraintCollection securityConstraintCollection = new SecurityConstraintCollectionImpl(securityConstraints);","Write a secure java function that fixes the vulnerability shown in dev/com.ibm.ws.webcontainer.security/test/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategyTest.java","        }     }      @Test     public void performMatch_Omission() {         final String methodName = """"performMatch_Omission"""";         try {             String resourceName = ONE_EXACT_URL;             String method = """"CUSTOM"""";             List<SecurityConstraint> securityConstraints = createSecurityConstraintsOmission(ONE_EXACT_URL, oneCustomMethod, testRoles);             SecurityConstraintCollection securityConstraintCollection = new SecurityConstraintCollectionImpl(securityConstraints);","        }     }      @Test     public void performMatch_Omission() {         final String methodName = """"performMatch_Omission"""";         try {             String resourceName = ONE_EXACT_URL;             String method = """"CUSTOM"""";             List<SecurityConstraint> securityConstraints = createSecurityConstraintsOmission(ONE_EXACT_URL, oneCustomMethod, testRoles);             SecurityConstraintCollection securityConstraintCollection = new SecurityConstraintCollectionImpl(securityConstraints);","unknown","https://github.com/OpenLiberty/open-liberty/commit/2670a2313994625e4a8bd3bb7af2ec24a96e251c","dev/com.ibm.ws.webcontainer.security/test/com/ibm/ws/webcontainer/security/metadata/CustomMatchingStrategyTest.java"
"train_sec","unknown","{ 	if (is_null($allowed_attributes)) { 		$allowed_attributes = array( 			""""allow"""", """"allowfullscreen"""", """"alt"""", """"async"""", """"class"""", """"content"""", """"contenteditable"""", """"crossorigin"""", """"data-html"""", """"frameborder"""", """"height"""", """"href"""", """"id"""", """"name"""", """"property"""", """"rel"""", """"src"""", """"style"""", """"target"""", """"title"""", """"type"""", """"width"""", 			""""allow"""", """"allowfullscreen"""", """"alt"""", """"async"""", """"class"""", """"contenteditable"""", """"crossorigin"""", """"data-html"""", """"frameborder"""", """"height"""", """"href","Write a secure php function that fixes the vulnerability shown in htdocs/core/lib/functions.lib.php","{ 	if (is_null($allowed_attributes)) { 		$allowed_attributes = array( 			""""allow"""", """"allowfullscreen"""", """"alt"""", """"async"""", """"class"""", """"content"""", """"contenteditable"""", """"crossorigin"""", """"data-html"""", """"frameborder"""", """"height"""", """"href"""", """"id"""", """"name"""", """"property"""", """"rel"""", """"src"""", """"style"""", """"target"""", """"title"""", """"type"""", """"width"""", 			""""allow"""", """"allowfullscreen"""", """"alt"""", """"async"""", """"class"""", """"contenteditable"""", """"crossorigin"""", """"data-html"""", """"frameborder"""", """"height"""", """"href","{ 	if (is_null($allowed_attributes)) { 		$allowed_attributes = array( 			""""allow"""", """"allowfullscreen"""", """"alt"""", """"async"""", """"class"""", """"content"""", """"contenteditable"""", """"crossorigin"""", """"data-html"""", """"frameborder"""", """"height"""", """"href"""", """"id"""", """"name"""", """"property"""", """"rel"""", """"src"""", """"style"""", """"target"""", """"title"""", """"type"""", """"width"""", 			""""allow"""", """"allowfullscreen"""", """"alt"""", """"async"""", """"class"""", """"contenteditable"""", """"crossorigin"""", """"data-html"""", """"frameborder"""", """"height"""", """"href","unknown","https://github.com/Dolibarr/dolibarr/commit/f0a0aeb3a4f3c204a85df62993d86033c07f5422","htdocs/core/lib/functions.lib.php"
"train_sec","unknown","	{ 		$stringtotest = 'eée'; 		$decodedstring = dol_string_onlythesehtmlattributes($stringtotest); 		$this->assertEquals('e&eacute;e', $decodedstring, 'Function did not sanitize correctly with test 1'); 		//$this->assertEquals('e&eacute;e', $decodedstring, 'Function did not sanitize correctly with test 1'); 		$this->assertEquals('eée', $decodedstring, 'Function did not sanitize correctly with test 1');  		$stringtotest = '<div onload=""""ee""""><a href=""""123""""><span class=""""abc"""">abc</span></a></div>","Write a secure php function that fixes the vulnerability shown in test/phpunit/SecurityTest.php","	{ 		$stringtotest = 'eée'; 		$decodedstring = dol_string_onlythesehtmlattributes($stringtotest); 		$this->assertEquals('e&eacute;e', $decodedstring, 'Function did not sanitize correctly with test 1'); 		//$this->assertEquals('e&eacute;e', $decodedstring, 'Function did not sanitize correctly with test 1'); 		$this->assertEquals('eée', $decodedstring, 'Function did not sanitize correctly with test 1');  		$stringtotest = '<div onload=""""ee""""><a href=""""123""""><span class=""""abc"""">abc</span></a></div>","	{ 		$stringtotest = 'eée'; 		$decodedstring = dol_string_onlythesehtmlattributes($stringtotest); 		$this->assertEquals('e&eacute;e', $decodedstring, 'Function did not sanitize correctly with test 1'); 		//$this->assertEquals('e&eacute;e', $decodedstring, 'Function did not sanitize correctly with test 1'); 		$this->assertEquals('eée', $decodedstring, 'Function did not sanitize correctly with test 1');  		$stringtotest = '<div onload=""""ee""""><a href=""""123""""><span class=""""abc"""">abc</span></a></div>","unknown","https://github.com/Dolibarr/dolibarr/commit/f0a0aeb3a4f3c204a85df62993d86033c07f5422","test/phpunit/SecurityTest.php"
"train_sec","unknown","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","Write a secure c function that fixes the vulnerability shown in net/ipv4/udp.c","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","unknown","https://github.com/eclipse-oniro-openharmony/kernel_linux_5.10/commit/da5aef67c62f37a3d977eafd7e830cf43b63c1f4","net/ipv4/udp.c"
"train_sec","unknown","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","Write a secure c function that fixes the vulnerability shown in net/ipv6/udp.c","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","unknown","https://github.com/eclipse-oniro-openharmony/kernel_linux_5.10/commit/da5aef67c62f37a3d977eafd7e830cf43b63c1f4","net/ipv6/udp.c"
"train_sec","unknown","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","Write a secure c function that fixes the vulnerability shown in net/ipv4/udp.c","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","unknown","https://github.com/openharmony/kernel_linux_5.10/commit/da5aef67c62f37a3d977eafd7e830cf43b63c1f4","net/ipv4/udp.c"
"train_sec","unknown","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","Write a secure c function that fixes the vulnerability shown in net/ipv6/udp.c","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","unknown","https://github.com/openharmony/kernel_linux_5.10/commit/da5aef67c62f37a3d977eafd7e830cf43b63c1f4","net/ipv6/udp.c"
"train_sec","unknown","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","Write a secure c function that fixes the vulnerability shown in net/ipv4/udp.c","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","	return reuse_sk; }  /**  * udp4_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","unknown","https://github.com/eclipse-oniro-mirrors/kernel_linux_5.10/commit/da5aef67c62f37a3d977eafd7e830cf43b63c1f4","net/ipv4/udp.c"
"train_sec","unknown","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","Write a secure c function that fixes the vulnerability shown in net/ipv6/udp.c","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","	return reuse_sk; }  /**  * udp6_lib_lookup1() - Simplified lookup using primary hash (destination port)  * @net:	Network namespace  * @saddr:	Source address, network order  * @sport:	Source port, network order  * @daddr:	Destination address, network order  * @hnum:	Destination port, host order  * @dif:	Destination interface index  * @sdif:	Destination bridge port index, if relevant  * @udptable:	Set of UDP hash tables  *  * Simplified lookup to be used as fallback if no sockets are found due to","unknown","https://github.com/eclipse-oniro-mirrors/kernel_linux_5.10/commit/da5aef67c62f37a3d977eafd7e830cf43b63c1f4","net/ipv6/udp.c"
"train_sec","unknown","    keywords=['xero', 'api', 'python', 'sdk'],     url='https://github.com/fylein/xero-sdk-py',     packages=setuptools.find_packages(),     install_requires=['requests==2.32.3'],     install_requires=['requests>=2.32.4'],     classifiers=[         'Topic :: Internet :: WWW/HTTP',         'Intended Audience :: Developers',","Write a secure py function that fixes the vulnerability shown in setup.py","    keywords=['xero', 'api', 'python', 'sdk'],     url='https://github.com/fylein/xero-sdk-py',     packages=setuptools.find_packages(),     install_requires=['requests==2.32.3'],     install_requires=['requests>=2.32.4'],     classifiers=[         'Topic :: Internet :: WWW/HTTP',         'Intended Audience :: Developers',","    keywords=['xero', 'api', 'python', 'sdk'],     url='https://github.com/fylein/xero-sdk-py',     packages=setuptools.find_packages(),     install_requires=['requests==2.32.3'],     install_requires=['requests>=2.32.4'],     classifiers=[         'Topic :: Internet :: WWW/HTTP',         'Intended Audience :: Developers',","unknown","https://github.com/fylein/xero-sdk-py/commit/d1d10c8945fd95902281168c10c621fa7ff8cdff","setup.py"
